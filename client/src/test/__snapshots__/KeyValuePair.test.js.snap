// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<KeyValuePair /> component rendering matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <KeyValuePair
    onKeyChange={[MockFunction]}
    onOperatorChange={[MockFunction]}
    onValueChange={[MockFunction]}
    pair={
      Object {
        "id": 0,
        "key": "",
        "operator": "=",
        "value": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Label
          labelFor="key0"
          value="Key"
        >
          <Autocomplete
            allowCreate={false}
            className="key-search"
            data-id={0}
            getCompletions={[Function]}
            onSelect={undefined}
          >
            <Textfield
              disabled={false}
              id="key0"
              invalid={false}
              placeholder="Type a key or key name"
              readOnly={false}
              required={false}
            />
          </Autocomplete>
        </Label>,
        <Select
          className="operator"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "=",
                "value": "=",
              },
              Object {
                "label": ">",
                "value": ">",
              },
              Object {
                "label": "<",
                "value": "<",
              },
              Object {
                "label": ">=",
                "value": ">=",
              },
              Object {
                "label": "<=",
                "value": "<=",
              },
              Object {
                "label": "contains",
                "value": "contains",
              },
            ]
          }
          value="="
        />,
        <Label
          labelFor="value0"
          value="Value (Optional)"
        >
          <Search
            className="value-search"
            data-id={0}
            icon={<SearchMagGlass />}
            id="value0"
            onChange={[MockFunction]}
            onSubmit={[Function]}
            placeholder="Type a value"
            value=""
          />
        </Label>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Autocomplete
            allowCreate={false}
            className="key-search"
            data-id={0}
            getCompletions={[Function]}
            onSelect={undefined}
          >
            <Textfield
              disabled={false}
              id="key0"
              invalid={false}
              placeholder="Type a key or key name"
              readOnly={false}
              required={false}
            />
          </Autocomplete>,
          "labelFor": "key0",
          "value": "Key",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowCreate": false,
            "children": <Textfield
              disabled={false}
              id="key0"
              invalid={false}
              placeholder="Type a key or key name"
              readOnly={false}
              required={false}
            />,
            "className": "key-search",
            "data-id": 0,
            "getCompletions": [Function],
            "onSelect": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "id": "key0",
              "invalid": false,
              "placeholder": "Type a key or key name",
              "readOnly": false,
              "required": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": "operator",
          "onChange": [Function],
          "options": Array [
            Object {
              "label": "=",
              "value": "=",
            },
            Object {
              "label": ">",
              "value": ">",
            },
            Object {
              "label": "<",
              "value": "<",
            },
            Object {
              "label": ">=",
              "value": ">=",
            },
            Object {
              "label": "<=",
              "value": "<=",
            },
            Object {
              "label": "contains",
              "value": "contains",
            },
          ],
          "value": "=",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Search
            className="value-search"
            data-id={0}
            icon={<SearchMagGlass />}
            id="value0"
            onChange={[MockFunction]}
            onSubmit={[Function]}
            placeholder="Type a value"
            value=""
          />,
          "labelFor": "value0",
          "value": "Value (Optional)",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "value-search",
            "data-id": 0,
            "icon": <SearchMagGlass />,
            "id": "value0",
            "onChange": [MockFunction],
            "onSubmit": [Function],
            "placeholder": "Type a value",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Label
            labelFor="key0"
            value="Key"
          >
            <Autocomplete
              allowCreate={false}
              className="key-search"
              data-id={0}
              getCompletions={[Function]}
              onSelect={undefined}
            >
              <Textfield
                disabled={false}
                id="key0"
                invalid={false}
                placeholder="Type a key or key name"
                readOnly={false}
                required={false}
              />
            </Autocomplete>
          </Label>,
          <Select
            className="operator"
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "=",
                  "value": "=",
                },
                Object {
                  "label": ">",
                  "value": ">",
                },
                Object {
                  "label": "<",
                  "value": "<",
                },
                Object {
                  "label": ">=",
                  "value": ">=",
                },
                Object {
                  "label": "<=",
                  "value": "<=",
                },
                Object {
                  "label": "contains",
                  "value": "contains",
                },
              ]
            }
            value="="
          />,
          <Label
            labelFor="value0"
            value="Value (Optional)"
          >
            <Search
              className="value-search"
              data-id={0}
              icon={<SearchMagGlass />}
              id="value0"
              onChange={[MockFunction]}
              onSubmit={[Function]}
              placeholder="Type a value"
              value=""
            />
          </Label>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Autocomplete
              allowCreate={false}
              className="key-search"
              data-id={0}
              getCompletions={[Function]}
              onSelect={undefined}
            >
              <Textfield
                disabled={false}
                id="key0"
                invalid={false}
                placeholder="Type a key or key name"
                readOnly={false}
                required={false}
              />
            </Autocomplete>,
            "labelFor": "key0",
            "value": "Key",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowCreate": false,
              "children": <Textfield
                disabled={false}
                id="key0"
                invalid={false}
                placeholder="Type a key or key name"
                readOnly={false}
                required={false}
              />,
              "className": "key-search",
              "data-id": 0,
              "getCompletions": [Function],
              "onSelect": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "id": "key0",
                "invalid": false,
                "placeholder": "Type a key or key name",
                "readOnly": false,
                "required": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": "operator",
            "onChange": [Function],
            "options": Array [
              Object {
                "label": "=",
                "value": "=",
              },
              Object {
                "label": ">",
                "value": ">",
              },
              Object {
                "label": "<",
                "value": "<",
              },
              Object {
                "label": ">=",
                "value": ">=",
              },
              Object {
                "label": "<=",
                "value": "<=",
              },
              Object {
                "label": "contains",
                "value": "contains",
              },
            ],
            "value": "=",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Search
              className="value-search"
              data-id={0}
              icon={<SearchMagGlass />}
              id="value0"
              onChange={[MockFunction]}
              onSubmit={[Function]}
              placeholder="Type a value"
              value=""
            />,
            "labelFor": "value0",
            "value": "Value (Optional)",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "value-search",
              "data-id": 0,
              "icon": <SearchMagGlass />,
              "id": "value0",
              "onChange": [MockFunction],
              "onSubmit": [Function],
              "placeholder": "Type a value",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
