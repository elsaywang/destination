// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SignalsTable /> component Rendering cells renderIncludedInTraits when signals are not included in traits passes \`categoryType\` prop\` 1`] = `
<TraitsCreation
  canCreateTraits={undefined}
  categoryType={undefined}
  keyValuePairs={undefined}
/>
`;

exports[`<SignalsTable /> component Rendering cells renderIncludedInTraits when signals are not included in traits passes \`categoryType\` prop\` 2`] = `
<TraitsCreation
  canCreateTraits={undefined}
  categoryType={undefined}
  keyValuePairs={undefined}
/>
`;

exports[`<SignalsTable /> component Rendering cells renderIncludedInTraits when signals are not included in traits passes \`categoryType\` prop\` 3`] = `
<TraitsCreation
  canCreateTraits={undefined}
  categoryType={undefined}
  keyValuePairs={undefined}
/>
`;

exports[`<SignalsTable /> component Rendering cells renderIncludedInTraits when signals are not included in traits passes \`categoryType\` prop\` 4`] = `
<TraitsCreation
  canCreateTraits={undefined}
  categoryType={undefined}
  keyValuePairs={undefined}
/>
`;

exports[`<SignalsTable /> component Rendering cells renderIncludedInTraits when signals are not included in traits passes \`categoryType\` prop\` 5`] = `
<TraitsCreation
  canCreateTraits={undefined}
  categoryType={undefined}
  keyValuePairs={undefined}
/>
`;

exports[`<SignalsTable /> component Rendering cells renderKeyValuePairs should render one key-value pair as \`\${key}=\${value}\` inside a div 1`] = `
<div
  className="truncate"
>
  <div
    className="truncate"
  >
    k=v asdhaksjdhaskdhasdkhsadasdahsdkadhaksdh
  </div>
</div>
`;

exports[`<SignalsTable /> component Rendering cells renderKeyValuePairs should render two key-value pairs on separate lines 1`] = `
<div
  className="truncate"
>
  <div
    className="truncate"
  >
    k1=v1 asdhaksjdhaskdhasdkhsadasdahsdkadhaksdh
  </div>
  <div
    className="truncate"
  >
    k2=v2 asdhaksjdhaskdhasdkhsadasdahsdkadhaksdh
  </div>
</div>
`;

exports[`<SignalsTable /> component rendering matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignalsTable
    allowsSelection={true}
    onLoadMore={[Function]}
    results={
        Array [
            Object {
              "id": 0,
              "name": "test1",
              "percentageChange": 0.1234,
              "source": Object {
                "reportSuiteIds": Array [
                  123,
                ],
                "sourceType": "ANALYTICS",
              },
            },
            Object {
              "id": 1,
              "name": "test2",
              "percentageChange": -0.5678,
              "source": Object {
                "dataSourceIds": Array [
                  456,
                ],
                "sourceType": "ONBOARDED",
              },
            },
          ]
    }
    signalType="ALL"
    sortSearch={[Function]}
    totalKeyValuePairs={3}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "allowsSelection": true,
      "columns": Array [
        Object {
          "key": "keyValuePairs",
          "minWidth": 150,
          "sortable": true,
          "title": "Key-Value Pair",
        },
        Object {
          "key": "signalType",
          "title": "Signal Type",
          "width": 140,
        },
        Object {
          "key": "signalSource",
          "title": "Signal Source",
          "width": 180,
        },
        Object {
          "key": "totalCount",
          "sortable": true,
          "title": "Total Counts",
          "width": 96,
        },
        Object {
          "key": "percentageChange",
          "sortable": true,
          "title": "Percentage Change",
          "width": 165,
        },
        Object {
          "key": "includedInTraits",
          "title": "Included In Traits",
          "width": 155,
        },
      ],
      "dataTest": "signals-table",
      "isMaxSelectedRowsReached": undefined,
      "items": Array [
        Object {
          "id": 0,
          "includedInTraits": Object {
            "categoryType": undefined,
            "keyValuePairs": undefined,
            "sids": undefined,
          },
          "name": "test1",
          "percentageChange": 0.1234,
          "signalSource": "123",
          "signalType": "Adobe Analytics",
          "source": Object {
            "reportSuiteIds": Array [
              123,
            ],
            "sourceType": "ANALYTICS",
          },
        },
        Object {
          "id": 1,
          "includedInTraits": Object {
            "categoryType": undefined,
            "keyValuePairs": undefined,
            "sids": undefined,
          },
          "name": "test2",
          "percentageChange": -0.5678,
          "signalSource": "456",
          "signalType": "Onboarded Records",
          "source": Object {
            "dataSourceIds": Array [
              456,
            ],
            "sourceType": "ONBOARDED",
          },
        },
      ],
      "onLoadMore": [Function],
      "onSelectionChange": [Function],
      "renderCell": [Function],
      "rowHeight": 144,
      "selectedRowIndexes": undefined,
      "sortSearch": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowsSelection": true,
        "columns": Array [
          Object {
            "key": "keyValuePairs",
            "minWidth": 150,
            "sortable": true,
            "title": "Key-Value Pair",
          },
          Object {
            "key": "signalType",
            "title": "Signal Type",
            "width": 140,
          },
          Object {
            "key": "signalSource",
            "title": "Signal Source",
            "width": 180,
          },
          Object {
            "key": "totalCount",
            "sortable": true,
            "title": "Total Counts",
            "width": 96,
          },
          Object {
            "key": "percentageChange",
            "sortable": true,
            "title": "Percentage Change",
            "width": 165,
          },
          Object {
            "key": "includedInTraits",
            "title": "Included In Traits",
            "width": 155,
          },
        ],
        "dataTest": "signals-table",
        "isMaxSelectedRowsReached": undefined,
        "items": Array [
          Object {
            "id": 0,
            "includedInTraits": Object {
              "categoryType": undefined,
              "keyValuePairs": undefined,
              "sids": undefined,
            },
            "name": "test1",
            "percentageChange": 0.1234,
            "signalSource": "123",
            "signalType": "Adobe Analytics",
            "source": Object {
              "reportSuiteIds": Array [
                123,
              ],
              "sourceType": "ANALYTICS",
            },
          },
          Object {
            "id": 1,
            "includedInTraits": Object {
              "categoryType": undefined,
              "keyValuePairs": undefined,
              "sids": undefined,
            },
            "name": "test2",
            "percentageChange": -0.5678,
            "signalSource": "456",
            "signalType": "Onboarded Records",
            "source": Object {
              "dataSourceIds": Array [
                456,
              ],
              "sourceType": "ONBOARDED",
            },
          },
        ],
        "onLoadMore": [Function],
        "onSelectionChange": [Function],
        "renderCell": [Function],
        "rowHeight": 144,
        "selectedRowIndexes": undefined,
        "sortSearch": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
