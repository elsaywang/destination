// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when CheckBox is checked matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SaveSearchSortingCriteria
    handleRadioChange={[MockFunction]}
    onDefaultSortingChange={[MockFunction]}
    radioCheckedValue="descending"
    radioGroupOptions={
      Array [
        Object {
          "label": "Descending",
          "value": "descending",
        },
        Object {
          "label": "Ascending",
          "value": "ascending",
        },
      ]
    }
    radioGroupStyle={undefined}
    selectOptions={
      Array [
        Object {
          "label": "Key-Value Pair",
          "value": "keyValuePairs",
        },
        Object {
          "label": "Signal Type",
          "value": "signalType",
        },
        Object {
          "label": "Signal Source",
          "value": "signalSource",
        },
        Object {
          "label": "Total Counts",
          "value": "totalCounts",
        },
        Object {
          "label": "Percentage Change",
          "value": "percentageChange",
        },
        Object {
          "label": "Included In Traits",
          "value": "includedInTraits",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Select
          onChange={[MockFunction]}
          options={
            Array [
              Object {
                "label": "Key-Value Pair",
                "value": "keyValuePairs",
              },
              Object {
                "label": "Signal Type",
                "value": "signalType",
              },
              Object {
                "label": "Signal Source",
                "value": "signalSource",
              },
              Object {
                "label": "Total Counts",
                "value": "totalCounts",
              },
              Object {
                "label": "Percentage Change",
                "value": "percentageChange",
              },
              Object {
                "label": "Included In Traits",
                "value": "includedInTraits",
              },
            ]
          }
        />,
        <div
          className={undefined}
        >
          <RadioGroup
            labelsBelow={false}
            onChange={[Function]}
            vertical={false}
          >
            <Radio
              checked={true}
              label="Descending"
              onChange={[MockFunction]}
              value="descending"
            />
            <Radio
              checked={false}
              label="Ascending"
              onChange={[MockFunction]}
              value="ascending"
            />
          </RadioGroup>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onChange": [MockFunction],
          "options": Array [
            Object {
              "label": "Key-Value Pair",
              "value": "keyValuePairs",
            },
            Object {
              "label": "Signal Type",
              "value": "signalType",
            },
            Object {
              "label": "Signal Source",
              "value": "signalSource",
            },
            Object {
              "label": "Total Counts",
              "value": "totalCounts",
            },
            Object {
              "label": "Percentage Change",
              "value": "percentageChange",
            },
            Object {
              "label": "Included In Traits",
              "value": "includedInTraits",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <RadioGroup
            labelsBelow={false}
            onChange={[Function]}
            vertical={false}
          >
            <Radio
              checked={true}
              label="Descending"
              onChange={[MockFunction]}
              value="descending"
            />
            <Radio
              checked={false}
              label="Ascending"
              onChange={[MockFunction]}
              value="ascending"
            />
          </RadioGroup>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Radio
                checked={true}
                label="Descending"
                onChange={[MockFunction]}
                value="descending"
              />,
              <Radio
                checked={false}
                label="Ascending"
                onChange={[MockFunction]}
                value="ascending"
              />,
            ],
            "labelsBelow": false,
            "onChange": [Function],
            "vertical": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "descending",
              "nodeType": "function",
              "props": Object {
                "checked": true,
                "label": "Descending",
                "onChange": [MockFunction],
                "value": "descending",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "ascending",
              "nodeType": "function",
              "props": Object {
                "checked": false,
                "label": "Ascending",
                "onChange": [MockFunction],
                "value": "ascending",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Select
            onChange={[MockFunction]}
            options={
              Array [
                Object {
                  "label": "Key-Value Pair",
                  "value": "keyValuePairs",
                },
                Object {
                  "label": "Signal Type",
                  "value": "signalType",
                },
                Object {
                  "label": "Signal Source",
                  "value": "signalSource",
                },
                Object {
                  "label": "Total Counts",
                  "value": "totalCounts",
                },
                Object {
                  "label": "Percentage Change",
                  "value": "percentageChange",
                },
                Object {
                  "label": "Included In Traits",
                  "value": "includedInTraits",
                },
              ]
            }
          />,
          <div
            className={undefined}
          >
            <RadioGroup
              labelsBelow={false}
              onChange={[Function]}
              vertical={false}
            >
              <Radio
                checked={true}
                label="Descending"
                onChange={[MockFunction]}
                value="descending"
              />
              <Radio
                checked={false}
                label="Ascending"
                onChange={[MockFunction]}
                value="ascending"
              />
            </RadioGroup>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [MockFunction],
            "options": Array [
              Object {
                "label": "Key-Value Pair",
                "value": "keyValuePairs",
              },
              Object {
                "label": "Signal Type",
                "value": "signalType",
              },
              Object {
                "label": "Signal Source",
                "value": "signalSource",
              },
              Object {
                "label": "Total Counts",
                "value": "totalCounts",
              },
              Object {
                "label": "Percentage Change",
                "value": "percentageChange",
              },
              Object {
                "label": "Included In Traits",
                "value": "includedInTraits",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <RadioGroup
              labelsBelow={false}
              onChange={[Function]}
              vertical={false}
            >
              <Radio
                checked={true}
                label="Descending"
                onChange={[MockFunction]}
                value="descending"
              />
              <Radio
                checked={false}
                label="Ascending"
                onChange={[MockFunction]}
                value="ascending"
              />
            </RadioGroup>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Radio
                  checked={true}
                  label="Descending"
                  onChange={[MockFunction]}
                  value="descending"
                />,
                <Radio
                  checked={false}
                  label="Ascending"
                  onChange={[MockFunction]}
                  value="ascending"
                />,
              ],
              "labelsBelow": false,
              "onChange": [Function],
              "vertical": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "descending",
                "nodeType": "function",
                "props": Object {
                  "checked": true,
                  "label": "Descending",
                  "onChange": [MockFunction],
                  "value": "descending",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "ascending",
                "nodeType": "function",
                "props": Object {
                  "checked": false,
                  "label": "Ascending",
                  "onChange": [MockFunction],
                  "value": "ascending",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
