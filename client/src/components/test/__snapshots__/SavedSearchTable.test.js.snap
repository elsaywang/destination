// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SavedSearchTable/> component rendering matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Wait />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": undefined,
      "children": Array [
        <div
          className="spectrum-Loader-track"
/>,
        <div
          className="spectrum-Loader-fills"
>
          <div
                    className="spectrum-Loader-fill-mask-1"
          >
                    <div
                              className="spectrum-Loader-fill-submask-1"
                              style={Object {}}
                    >
                              <div
                                        className="spectrum-Loader-fill"
                              />
                    </div>
          </div>
          <div
                    className="spectrum-Loader-fill-mask-2"
          >
                    <div
                              className="spectrum-Loader-fill-submask-2"
                              style={Object {}}
                    >
                              <div
                                        className="spectrum-Loader-fill"
                              />
                    </div>
          </div>
</div>,
      ],
      "className": "spectrum-Loader spectrum-Loader--indeterminate",
      "role": "progressbar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "spectrum-Loader-track",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="spectrum-Loader-fill-mask-1"
>
              <div
                            className="spectrum-Loader-fill-submask-1"
                            style={Object {}}
              >
                            <div
                                          className="spectrum-Loader-fill"
                            />
              </div>
</div>,
            <div
              className="spectrum-Loader-fill-mask-2"
>
              <div
                            className="spectrum-Loader-fill-submask-2"
                            style={Object {}}
              >
                            <div
                                          className="spectrum-Loader-fill"
                            />
              </div>
</div>,
          ],
          "className": "spectrum-Loader-fills",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="spectrum-Loader-fill-submask-1"
                style={Object {}}
>
                <div
                                className="spectrum-Loader-fill"
                />
</div>,
              "className": "spectrum-Loader-fill-mask-1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="spectrum-Loader-fill"
/>,
                "className": "spectrum-Loader-fill-submask-1",
                "style": Object {},
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "spectrum-Loader-fill",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="spectrum-Loader-fill-submask-2"
                style={Object {}}
>
                <div
                                className="spectrum-Loader-fill"
                />
</div>,
              "className": "spectrum-Loader-fill-mask-2",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="spectrum-Loader-fill"
/>,
                "className": "spectrum-Loader-fill-submask-2",
                "style": Object {},
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "spectrum-Loader-fill",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-valuemax": 100,
        "aria-valuemin": 0,
        "aria-valuenow": undefined,
        "children": Array [
          <div
            className="spectrum-Loader-track"
/>,
          <div
            className="spectrum-Loader-fills"
>
            <div
                        className="spectrum-Loader-fill-mask-1"
            >
                        <div
                                    className="spectrum-Loader-fill-submask-1"
                                    style={Object {}}
                        >
                                    <div
                                                className="spectrum-Loader-fill"
                                    />
                        </div>
            </div>
            <div
                        className="spectrum-Loader-fill-mask-2"
            >
                        <div
                                    className="spectrum-Loader-fill-submask-2"
                                    style={Object {}}
                        >
                                    <div
                                                className="spectrum-Loader-fill"
                                    />
                        </div>
            </div>
</div>,
        ],
        "className": "spectrum-Loader spectrum-Loader--indeterminate",
        "role": "progressbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "spectrum-Loader-track",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="spectrum-Loader-fill-mask-1"
>
                <div
                                className="spectrum-Loader-fill-submask-1"
                                style={Object {}}
                >
                                <div
                                                className="spectrum-Loader-fill"
                                />
                </div>
</div>,
              <div
                className="spectrum-Loader-fill-mask-2"
>
                <div
                                className="spectrum-Loader-fill-submask-2"
                                style={Object {}}
                >
                                <div
                                                className="spectrum-Loader-fill"
                                />
                </div>
</div>,
            ],
            "className": "spectrum-Loader-fills",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="spectrum-Loader-fill-submask-1"
                  style={Object {}}
>
                  <div
                                    className="spectrum-Loader-fill"
                  />
</div>,
                "className": "spectrum-Loader-fill-mask-1",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="spectrum-Loader-fill"
/>,
                  "className": "spectrum-Loader-fill-submask-1",
                  "style": Object {},
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "spectrum-Loader-fill",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="spectrum-Loader-fill-submask-2"
                  style={Object {}}
>
                  <div
                                    className="spectrum-Loader-fill"
                  />
</div>,
                "className": "spectrum-Loader-fill-mask-2",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="spectrum-Loader-fill"
/>,
                  "className": "spectrum-Loader-fill-submask-2",
                  "style": Object {},
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "spectrum-Loader-fill",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<SavedSearchTable/> component state changes based on lifecyle events with error matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EmptySearch
    className="noResults"
    variant="errorFetching"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <img
        alt="Error fetching data. Please try again later."
        className="noResultImage"
        data-test="error-fetching-data"
        src="undefinednoResult.svg"
/>,
      "className": "noResults",
      "message": "Please try again later.",
      "messageStyle": "noResultMessage",
      "title": "Error fetching data.",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "alt": "Error fetching data. Please try again later.",
        "className": "noResultImage",
        "data-test": "error-fetching-data",
        "src": "undefinednoResult.svg",
      },
      "ref": null,
      "rendered": null,
      "type": "img",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <img
          alt="Error fetching data. Please try again later."
          className="noResultImage"
          data-test="error-fetching-data"
          src="undefinednoResult.svg"
/>,
        "className": "noResults",
        "message": "Please try again later.",
        "messageStyle": "noResultMessage",
        "title": "Error fetching data.",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "Error fetching data. Please try again later.",
          "className": "noResultImage",
          "data-test": "error-fetching-data",
          "src": "undefinednoResult.svg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<SavedSearchTable/> component state changes based on lifecyle events without error matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignalsTable
    allowsSelection={false}
    canCreateTraits={undefined}
    isAdvancedSearchEnabled={false}
    isLoaded={1}
    results={
        Array [
            Object {
              "includedInTraits": null,
              "keyValuePairs": Array [
                Object {
                  "key": "evar18",
                  "value": "CMS18",
                },
              ],
              "percentageChange": 0.27783491545226535,
              "signalStatus": "UNUSED",
              "source": Object {
                "dataSourceIds": null,
                "reportSuiteIds": null,
                "sourceType": null,
              },
              "totalCount": 93859,
            },
          ]
    }
    totalKeyValuePairs={1}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "allowsSelection": false,
      "columns": Array [
        Object {
          "key": "keyValuePairs",
          "minWidth": 150,
          "sortable": true,
          "title": "Key-Value Pair",
        },
        Object {
          "key": "signalType",
          "title": "Signal Type",
          "width": 140,
        },
        Object {
          "key": "signalSource",
          "title": "Signal Source",
          "width": 180,
        },
        Object {
          "key": "totalCount",
          "sortable": true,
          "title": "Total Counts",
          "width": 96,
        },
        Object {
          "key": "percentageChange",
          "sortable": true,
          "title": "Percentage Change",
          "width": 165,
        },
        Object {
          "key": "includedInTraits",
          "title": "Included In Traits",
          "width": 155,
        },
      ],
      "dataTest": "signals-table",
      "isMaxSelectedRowsReached": undefined,
      "items": Array [
        Object {
          "includedInTraits": Object {
            "categoryType": "REALTIME",
            "keyValuePairs": Array [
              Object {
                "key": "evar18",
                "value": "CMS18",
              },
            ],
            "sids": Array [],
          },
          "keyValuePairs": Array [
            Object {
              "key": "evar18",
              "value": "CMS18",
            },
          ],
          "percentageChange": 0.27783491545226535,
          "signalSource": "—",
          "signalStatus": "UNUSED",
          "signalType": "—",
          "source": Object {
            "dataSourceIds": null,
            "reportSuiteIds": null,
            "sourceType": null,
          },
          "totalCount": 93859,
        },
      ],
      "onLoadMore": undefined,
      "onSelectionChange": [Function],
      "renderCell": [Function],
      "rowHeight": 48,
      "selectedRowIndexes": undefined,
      "sortSearch": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowsSelection": false,
        "columns": Array [
          Object {
            "key": "keyValuePairs",
            "minWidth": 150,
            "sortable": true,
            "title": "Key-Value Pair",
          },
          Object {
            "key": "signalType",
            "title": "Signal Type",
            "width": 140,
          },
          Object {
            "key": "signalSource",
            "title": "Signal Source",
            "width": 180,
          },
          Object {
            "key": "totalCount",
            "sortable": true,
            "title": "Total Counts",
            "width": 96,
          },
          Object {
            "key": "percentageChange",
            "sortable": true,
            "title": "Percentage Change",
            "width": 165,
          },
          Object {
            "key": "includedInTraits",
            "title": "Included In Traits",
            "width": 155,
          },
        ],
        "dataTest": "signals-table",
        "isMaxSelectedRowsReached": undefined,
        "items": Array [
          Object {
            "includedInTraits": Object {
              "categoryType": "REALTIME",
              "keyValuePairs": Array [
                Object {
                  "key": "evar18",
                  "value": "CMS18",
                },
              ],
              "sids": Array [],
            },
            "keyValuePairs": Array [
              Object {
                "key": "evar18",
                "value": "CMS18",
              },
            ],
            "percentageChange": 0.27783491545226535,
            "signalSource": "—",
            "signalStatus": "UNUSED",
            "signalType": "—",
            "source": Object {
              "dataSourceIds": null,
              "reportSuiteIds": null,
              "sourceType": null,
            },
            "totalCount": 93859,
          },
        ],
        "onLoadMore": undefined,
        "onSelectionChange": [Function],
        "renderCell": [Function],
        "rowHeight": 48,
        "selectedRowIndexes": undefined,
        "sortSearch": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
