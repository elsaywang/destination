// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> component rendering matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    advanced={false}
    customEndDate="05-01-2018"
    customStartDate="04-24-2018"
    isCustomDateRangeEnabled={false}
    keyValuePairs={
      Array [
        Object {
          "id": 0,
          "key": "",
          "operator": "==",
          "value": "",
        },
      ]
    }
    minEventFires={1000}
    name=""
    onAddClick={[MockFunction]}
    onAdvancedSearchChange={[MockFunction]}
    onClearAll={[MockFunction]}
    onCustomEndDateChange={[MockFunction]}
    onCustomStartDateChange={[MockFunction]}
    onFilterChange={[MockFunction]}
    onFilterSelect={[MockFunction]}
    onKeySelect={[MockFunction]}
    onMinEventFiresChange={[MockFunction]}
    onOperatorChange={[MockFunction]}
    onRemoveClick={[MockFunction]}
    onSearch={[MockFunction]}
    onSignalStatusChange={[MockFunction]}
    onValueChange={[MockFunction]}
    onViewRecordsChange={[MockFunction]}
    reportSuites={Array []}
    signalStatus="ALL"
    source={
      Object {
        "dataSourceIds": 0,
        "name": "",
        "reportSuiteIds": 0,
        "sourceType": "ALL",
      }
    }
    viewRecordsFor="7D"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <GridColumn
        size={12}
      >
        <Switch
          aria-label="Advanced Search"
          checked={false}
          className="advanced-search-toggle"
          data-test="advanced-search-toggle"
          label="Advanced search for Adobe Analytics"
          onChange={[MockFunction]}
        />
        <Well>
          <div
            data-test="search-form"
          >
            <GridRow
              reverse={false}
            >
              <GridColumn
                size={12}
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    size={12}
                    style={
                      Object {
                        "alignItems": "baseline",
                        "display": "flex",
                        "marginBottom": "1rem",
                      }
                    }
                  >
                    <KeyValuePair
                      advanced={false}
                      onKeyChange={undefined}
                      onOperatorChange={[MockFunction]}
                      onValueChange={[MockFunction]}
                      pair={
                        Object {
                          "id": 0,
                          "key": "",
                          "operator": "==",
                          "value": "",
                        }
                      }
                      reportSuiteId={0}
                    />
                    <Button
                      autoFocus={false}
                      block={false}
                      data-test="add-button"
                      disabled={false}
                      element="button"
                      icon={<AddCircle />}
                      invalid={false}
                      label="Add"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={true}
                      selected={false}
                      variant="action"
                    />
                  </GridColumn>
                </GridRow>
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    size={7}
                  >
                    <Label
                      value="Signal Status"
                    >
                      <Select
                        className="signal-status"
                        data-test="signal-status"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "All",
                              "value": "ALL",
                            },
                            Object {
                              "label": "Unused Signals",
                              "value": "UNUSED",
                            },
                            Object {
                              "label": "Signals Included in Traits",
                              "value": "USED",
                            },
                          ]
                        }
                        quiet={true}
                        value="ALL"
                      />
                    </Label>
                    <Label
                      value="View Records For"
                    >
                      <Select
                        className="view-records"
                        data-test="view-records"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "Last 1 Day",
                              "value": "1D",
                            },
                            Object {
                              "label": "Last 7 Days",
                              "value": "7D",
                            },
                            Object {
                              "label": "Last 14 Days",
                              "value": "14D",
                            },
                            Object {
                              "label": "Last 30 Days",
                              "value": "30D",
                            },
                            Object {
                              "label": "Custom Date Range",
                              "value": "custom",
                            },
                          ]
                        }
                        quiet={true}
                        value="7D"
                      />
                    </Label>
                    <Label
                      value="Minimum Counts"
                    >
                      <NumberInput
                        className="min-counts"
                        data-test="min-counts"
                        decrementTitle="Decrement"
                        disabled={false}
                        incrementTitle="Increment"
                        invalid={false}
                        onChange={[MockFunction]}
                        placeholder="Enter a number"
                        quiet={true}
                        readOnly={false}
                        step={1}
                        value={1000}
                      />
                    </Label>
                  </GridColumn>
                  <GridColumn
                    size={3}
                  >
                    <Button
                      autoFocus={false}
                      block={false}
                      data-test="search-button"
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Search"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="cta"
                    />
                    <Button
                      autoFocus={false}
                      block={false}
                      data-test="clear-all-button"
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Clear All"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="secondary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>
          </div>
        </Well>
      </GridColumn>,
      "reverse": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Switch
            aria-label="Advanced Search"
            checked={false}
            className="advanced-search-toggle"
            data-test="advanced-search-toggle"
            label="Advanced search for Adobe Analytics"
            onChange={[MockFunction]}
          />,
          <Well>
            <div
              data-test="search-form"
            >
              <GridRow
                reverse={false}
              >
                <GridColumn
                  size={12}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={12}
                      style={
                        Object {
                          "alignItems": "baseline",
                          "display": "flex",
                          "marginBottom": "1rem",
                        }
                      }
                    >
                      <KeyValuePair
                        advanced={false}
                        onKeyChange={undefined}
                        onOperatorChange={[MockFunction]}
                        onValueChange={[MockFunction]}
                        pair={
                          Object {
                            "id": 0,
                            "key": "",
                            "operator": "==",
                            "value": "",
                          }
                        }
                        reportSuiteId={0}
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="add-button"
                        disabled={false}
                        element="button"
                        icon={<AddCircle />}
                        invalid={false}
                        label="Add"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={true}
                        selected={false}
                        variant="action"
                      />
                    </GridColumn>
                  </GridRow>
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          data-test="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "ALL",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "UNUSED",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "USED",
                              },
                            ]
                          }
                          quiet={true}
                          value="ALL"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          data-test="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": "1D",
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": "7D",
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": "14D",
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": "30D",
                              },
                              Object {
                                "label": "Custom Date Range",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value="7D"
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          data-test="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="search-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="clear-all-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>
            </div>
          </Well>,
        ],
        "size": 12,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "aria-label": "Advanced Search",
            "checked": false,
            "className": "advanced-search-toggle",
            "data-test": "advanced-search-toggle",
            "label": "Advanced search for Adobe Analytics",
            "onChange": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              data-test="search-form"
            >
              <GridRow
                reverse={false}
              >
                <GridColumn
                  size={12}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={12}
                      style={
                        Object {
                          "alignItems": "baseline",
                          "display": "flex",
                          "marginBottom": "1rem",
                        }
                      }
                    >
                      <KeyValuePair
                        advanced={false}
                        onKeyChange={undefined}
                        onOperatorChange={[MockFunction]}
                        onValueChange={[MockFunction]}
                        pair={
                          Object {
                            "id": 0,
                            "key": "",
                            "operator": "==",
                            "value": "",
                          }
                        }
                        reportSuiteId={0}
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="add-button"
                        disabled={false}
                        element="button"
                        icon={<AddCircle />}
                        invalid={false}
                        label="Add"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={true}
                        selected={false}
                        variant="action"
                      />
                    </GridColumn>
                  </GridRow>
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          data-test="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "ALL",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "UNUSED",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "USED",
                              },
                            ]
                          }
                          quiet={true}
                          value="ALL"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          data-test="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": "1D",
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": "7D",
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": "14D",
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": "30D",
                              },
                              Object {
                                "label": "Custom Date Range",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value="7D"
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          data-test="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="search-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="clear-all-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                false,
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    size={12}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={12}
                        style={
                          Object {
                            "alignItems": "baseline",
                            "display": "flex",
                            "marginBottom": "1rem",
                          }
                        }
                      >
                        <KeyValuePair
                          advanced={false}
                          onKeyChange={undefined}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "==",
                              "value": "",
                            }
                          }
                          reportSuiteId={0}
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="add-button"
                          disabled={false}
                          element="button"
                          icon={<AddCircle />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>
                    </GridRow>
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            data-test="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "ALL",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "UNUSED",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "USED",
                                },
                              ]
                            }
                            quiet={true}
                            value="ALL"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            data-test="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": "1D",
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": "7D",
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": "14D",
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": "30D",
                                },
                                Object {
                                  "label": "Custom Date Range",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value="7D"
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            data-test="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>
                      <GridColumn
                        size={3}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="search-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="clear-all-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>
                </GridRow>,
              ],
              "data-test": "search-form",
            },
            "ref": null,
            "rendered": Array [
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <GridColumn
                    size={12}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={12}
                        style={
                          Object {
                            "alignItems": "baseline",
                            "display": "flex",
                            "marginBottom": "1rem",
                          }
                        }
                      >
                        <KeyValuePair
                          advanced={false}
                          onKeyChange={undefined}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "==",
                              "value": "",
                            }
                          }
                          reportSuiteId={0}
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="add-button"
                          disabled={false}
                          element="button"
                          icon={<AddCircle />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>
                    </GridRow>
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            data-test="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "ALL",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "UNUSED",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "USED",
                                },
                              ]
                            }
                            quiet={true}
                            value="ALL"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            data-test="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": "1D",
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": "7D",
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": "14D",
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": "30D",
                                },
                                Object {
                                  "label": "Custom Date Range",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value="7D"
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            data-test="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>
                      <GridColumn
                        size={3}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="search-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="clear-all-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>,
                  "reverse": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      Array [
                        <GridRow
                          reverse={false}
                        >
                          <GridColumn
                            size={12}
                            style={
                              Object {
                                "alignItems": "baseline",
                                "display": "flex",
                                "marginBottom": "1rem",
                              }
                            }
                          >
                            <KeyValuePair
                              advanced={false}
                              onKeyChange={undefined}
                              onOperatorChange={[MockFunction]}
                              onValueChange={[MockFunction]}
                              pair={
                                Object {
                                  "id": 0,
                                  "key": "",
                                  "operator": "==",
                                  "value": "",
                                }
                              }
                              reportSuiteId={0}
                            />
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="add-button"
                              disabled={false}
                              element="button"
                              icon={<AddCircle />}
                              invalid={false}
                              label="Add"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={true}
                              selected={false}
                              variant="action"
                            />
                          </GridColumn>
                        </GridRow>,
                      ],
                      <GridRow
                        reverse={false}
                      >
                        <GridColumn
                          size={7}
                        >
                          <Label
                            value="Signal Status"
                          >
                            <Select
                              className="signal-status"
                              data-test="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "ALL",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "UNUSED",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "USED",
                                  },
                                ]
                              }
                              quiet={true}
                              value="ALL"
                            />
                          </Label>
                          <Label
                            value="View Records For"
                          >
                            <Select
                              className="view-records"
                              data-test="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": "1D",
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": "7D",
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": "14D",
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": "30D",
                                  },
                                  Object {
                                    "label": "Custom Date Range",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value="7D"
                            />
                          </Label>
                          <Label
                            value="Minimum Counts"
                          >
                            <NumberInput
                              className="min-counts"
                              data-test="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />
                          </Label>
                        </GridColumn>
                        <GridColumn
                          size={3}
                        >
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="search-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Search"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="cta"
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="clear-all-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Clear All"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="secondary"
                          />
                        </GridColumn>
                      </GridRow>,
                    ],
                    "size": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "class",
                      "props": Object {
                        "children": <GridColumn
                          size={12}
                          style={
                            Object {
                              "alignItems": "baseline",
                              "display": "flex",
                              "marginBottom": "1rem",
                            }
                          }
                        >
                          <KeyValuePair
                            advanced={false}
                            onKeyChange={undefined}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "==",
                                "value": "",
                              }
                            }
                            reportSuiteId={0}
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="add-button"
                            disabled={false}
                            element="button"
                            icon={<AddCircle />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />
                        </GridColumn>,
                        "reverse": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <KeyValuePair
                              advanced={false}
                              onKeyChange={undefined}
                              onOperatorChange={[MockFunction]}
                              onValueChange={[MockFunction]}
                              pair={
                                Object {
                                  "id": 0,
                                  "key": "",
                                  "operator": "==",
                                  "value": "",
                                }
                              }
                              reportSuiteId={0}
                            />,
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="add-button"
                              disabled={false}
                              element="button"
                              icon={<AddCircle />}
                              invalid={false}
                              label="Add"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={true}
                              selected={false}
                              variant="action"
                            />,
                            false,
                          ],
                          "size": 12,
                          "style": Object {
                            "alignItems": "baseline",
                            "display": "flex",
                            "marginBottom": "1rem",
                          },
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": "0",
                            "nodeType": "class",
                            "props": Object {
                              "advanced": false,
                              "onKeyChange": undefined,
                              "onOperatorChange": [MockFunction],
                              "onValueChange": [MockFunction],
                              "pair": Object {
                                "id": 0,
                                "key": "",
                                "operator": "==",
                                "value": "",
                              },
                              "reportSuiteId": 0,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "autoFocus": false,
                              "block": false,
                              "data-test": "add-button",
                              "disabled": false,
                              "element": "button",
                              "icon": <AddCircle />,
                              "invalid": false,
                              "label": "Add",
                              "logic": false,
                              "onClick": [MockFunction],
                              "quiet": true,
                              "selected": false,
                              "variant": "action",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          false,
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <GridColumn
                            size={7}
                          >
                            <Label
                              value="Signal Status"
                            >
                              <Select
                                className="signal-status"
                                data-test="signal-status"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All",
                                      "value": "ALL",
                                    },
                                    Object {
                                      "label": "Unused Signals",
                                      "value": "UNUSED",
                                    },
                                    Object {
                                      "label": "Signals Included in Traits",
                                      "value": "USED",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="ALL"
                              />
                            </Label>
                            <Label
                              value="View Records For"
                            >
                              <Select
                                className="view-records"
                                data-test="view-records"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Last 1 Day",
                                      "value": "1D",
                                    },
                                    Object {
                                      "label": "Last 7 Days",
                                      "value": "7D",
                                    },
                                    Object {
                                      "label": "Last 14 Days",
                                      "value": "14D",
                                    },
                                    Object {
                                      "label": "Last 30 Days",
                                      "value": "30D",
                                    },
                                    Object {
                                      "label": "Custom Date Range",
                                      "value": "custom",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="7D"
                              />
                            </Label>
                            <Label
                              value="Minimum Counts"
                            >
                              <NumberInput
                                className="min-counts"
                                data-test="min-counts"
                                decrementTitle="Decrement"
                                disabled={false}
                                incrementTitle="Increment"
                                invalid={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a number"
                                quiet={true}
                                readOnly={false}
                                step={1}
                                value={1000}
                              />
                            </Label>
                          </GridColumn>,
                          <GridColumn
                            size={3}
                          >
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="search-button"
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Search"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="cta"
                            />
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="clear-all-button"
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Clear All"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="secondary"
                            />
                          </GridColumn>,
                        ],
                        "reverse": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              <Label
                                value="Signal Status"
                              >
                                <Select
                                  className="signal-status"
                                  data-test="signal-status"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "All",
                                        "value": "ALL",
                                      },
                                      Object {
                                        "label": "Unused Signals",
                                        "value": "UNUSED",
                                      },
                                      Object {
                                        "label": "Signals Included in Traits",
                                        "value": "USED",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="ALL"
                                />
                              </Label>,
                              <Label
                                value="View Records For"
                              >
                                <Select
                                  className="view-records"
                                  data-test="view-records"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Last 1 Day",
                                        "value": "1D",
                                      },
                                      Object {
                                        "label": "Last 7 Days",
                                        "value": "7D",
                                      },
                                      Object {
                                        "label": "Last 14 Days",
                                        "value": "14D",
                                      },
                                      Object {
                                        "label": "Last 30 Days",
                                        "value": "30D",
                                      },
                                      Object {
                                        "label": "Custom Date Range",
                                        "value": "custom",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="7D"
                                />
                              </Label>,
                              null,
                              <Label
                                value="Minimum Counts"
                              >
                                <NumberInput
                                  className="min-counts"
                                  data-test="min-counts"
                                  decrementTitle="Decrement"
                                  disabled={false}
                                  incrementTitle="Increment"
                                  invalid={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a number"
                                  quiet={true}
                                  readOnly={false}
                                  step={1}
                                  value={1000}
                                />
                              </Label>,
                            ],
                            "size": 7,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": <Select
                                  className="signal-status"
                                  data-test="signal-status"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "All",
                                        "value": "ALL",
                                      },
                                      Object {
                                        "label": "Unused Signals",
                                        "value": "UNUSED",
                                      },
                                      Object {
                                        "label": "Signals Included in Traits",
                                        "value": "USED",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="ALL"
                                />,
                                "value": "Signal Status",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "className": "signal-status",
                                  "data-test": "signal-status",
                                  "onChange": [MockFunction],
                                  "options": Array [
                                    Object {
                                      "label": "All",
                                      "value": "ALL",
                                    },
                                    Object {
                                      "label": "Unused Signals",
                                      "value": "UNUSED",
                                    },
                                    Object {
                                      "label": "Signals Included in Traits",
                                      "value": "USED",
                                    },
                                  ],
                                  "quiet": true,
                                  "value": "ALL",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": <Select
                                  className="view-records"
                                  data-test="view-records"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Last 1 Day",
                                        "value": "1D",
                                      },
                                      Object {
                                        "label": "Last 7 Days",
                                        "value": "7D",
                                      },
                                      Object {
                                        "label": "Last 14 Days",
                                        "value": "14D",
                                      },
                                      Object {
                                        "label": "Last 30 Days",
                                        "value": "30D",
                                      },
                                      Object {
                                        "label": "Custom Date Range",
                                        "value": "custom",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="7D"
                                />,
                                "value": "View Records For",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "className": "view-records",
                                  "data-test": "view-records",
                                  "onChange": [MockFunction],
                                  "options": Array [
                                    Object {
                                      "label": "Last 1 Day",
                                      "value": "1D",
                                    },
                                    Object {
                                      "label": "Last 7 Days",
                                      "value": "7D",
                                    },
                                    Object {
                                      "label": "Last 14 Days",
                                      "value": "14D",
                                    },
                                    Object {
                                      "label": "Last 30 Days",
                                      "value": "30D",
                                    },
                                    Object {
                                      "label": "Custom Date Range",
                                      "value": "custom",
                                    },
                                  ],
                                  "quiet": true,
                                  "value": "7D",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": [Function],
                            },
                            null,
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "children": <NumberInput
                                  className="min-counts"
                                  data-test="min-counts"
                                  decrementTitle="Decrement"
                                  disabled={false}
                                  incrementTitle="Increment"
                                  invalid={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a number"
                                  quiet={true}
                                  readOnly={false}
                                  step={1}
                                  value={1000}
                                />,
                                "value": "Minimum Counts",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "className": "min-counts",
                                  "data-test": "min-counts",
                                  "decrementTitle": "Decrement",
                                  "disabled": false,
                                  "incrementTitle": "Increment",
                                  "invalid": false,
                                  "onChange": [MockFunction],
                                  "placeholder": "Enter a number",
                                  "quiet": true,
                                  "readOnly": false,
                                  "step": 1,
                                  "value": 1000,
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="search-button"
                                disabled={false}
                                element="button"
                                invalid={false}
                                label="Search"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={false}
                                selected={false}
                                variant="cta"
                              />,
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="clear-all-button"
                                disabled={false}
                                element="button"
                                invalid={false}
                                label="Clear All"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={false}
                                selected={false}
                                variant="secondary"
                              />,
                            ],
                            "size": 3,
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "autoFocus": false,
                                "block": false,
                                "data-test": "search-button",
                                "disabled": false,
                                "element": "button",
                                "invalid": false,
                                "label": "Search",
                                "logic": false,
                                "onClick": [MockFunction],
                                "quiet": false,
                                "selected": false,
                                "variant": "cta",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "autoFocus": false,
                                "block": false,
                                "data-test": "clear-all-button",
                                "disabled": false,
                                "element": "button",
                                "invalid": false,
                                "label": "Clear All",
                                "logic": false,
                                "onClick": [MockFunction],
                                "quiet": false,
                                "selected": false,
                                "variant": "secondary",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <GridColumn
          size={12}
        >
          <Switch
            aria-label="Advanced Search"
            checked={false}
            className="advanced-search-toggle"
            data-test="advanced-search-toggle"
            label="Advanced search for Adobe Analytics"
            onChange={[MockFunction]}
          />
          <Well>
            <div
              data-test="search-form"
            >
              <GridRow
                reverse={false}
              >
                <GridColumn
                  size={12}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={12}
                      style={
                        Object {
                          "alignItems": "baseline",
                          "display": "flex",
                          "marginBottom": "1rem",
                        }
                      }
                    >
                      <KeyValuePair
                        advanced={false}
                        onKeyChange={undefined}
                        onOperatorChange={[MockFunction]}
                        onValueChange={[MockFunction]}
                        pair={
                          Object {
                            "id": 0,
                            "key": "",
                            "operator": "==",
                            "value": "",
                          }
                        }
                        reportSuiteId={0}
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="add-button"
                        disabled={false}
                        element="button"
                        icon={<AddCircle />}
                        invalid={false}
                        label="Add"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={true}
                        selected={false}
                        variant="action"
                      />
                    </GridColumn>
                  </GridRow>
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          data-test="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "ALL",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "UNUSED",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "USED",
                              },
                            ]
                          }
                          quiet={true}
                          value="ALL"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          data-test="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": "1D",
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": "7D",
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": "14D",
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": "30D",
                              },
                              Object {
                                "label": "Custom Date Range",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value="7D"
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          data-test="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="search-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        autoFocus={false}
                        block={false}
                        data-test="clear-all-button"
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>
            </div>
          </Well>
        </GridColumn>,
        "reverse": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Switch
              aria-label="Advanced Search"
              checked={false}
              className="advanced-search-toggle"
              data-test="advanced-search-toggle"
              label="Advanced search for Adobe Analytics"
              onChange={[MockFunction]}
            />,
            <Well>
              <div
                data-test="search-form"
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    size={12}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={12}
                        style={
                          Object {
                            "alignItems": "baseline",
                            "display": "flex",
                            "marginBottom": "1rem",
                          }
                        }
                      >
                        <KeyValuePair
                          advanced={false}
                          onKeyChange={undefined}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "==",
                              "value": "",
                            }
                          }
                          reportSuiteId={0}
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="add-button"
                          disabled={false}
                          element="button"
                          icon={<AddCircle />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>
                    </GridRow>
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            data-test="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "ALL",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "UNUSED",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "USED",
                                },
                              ]
                            }
                            quiet={true}
                            value="ALL"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            data-test="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": "1D",
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": "7D",
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": "14D",
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": "30D",
                                },
                                Object {
                                  "label": "Custom Date Range",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value="7D"
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            data-test="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>
                      <GridColumn
                        size={3}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="search-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="clear-all-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>
                </GridRow>
              </div>
            </Well>,
          ],
          "size": 12,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "aria-label": "Advanced Search",
              "checked": false,
              "className": "advanced-search-toggle",
              "data-test": "advanced-search-toggle",
              "label": "Advanced search for Adobe Analytics",
              "onChange": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                data-test="search-form"
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    size={12}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={12}
                        style={
                          Object {
                            "alignItems": "baseline",
                            "display": "flex",
                            "marginBottom": "1rem",
                          }
                        }
                      >
                        <KeyValuePair
                          advanced={false}
                          onKeyChange={undefined}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "==",
                              "value": "",
                            }
                          }
                          reportSuiteId={0}
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="add-button"
                          disabled={false}
                          element="button"
                          icon={<AddCircle />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>
                    </GridRow>
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            data-test="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "ALL",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "UNUSED",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "USED",
                                },
                              ]
                            }
                            quiet={true}
                            value="ALL"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            data-test="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": "1D",
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": "7D",
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": "14D",
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": "30D",
                                },
                                Object {
                                  "label": "Custom Date Range",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value="7D"
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            data-test="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>
                      <GridColumn
                        size={3}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="search-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          autoFocus={false}
                          block={false}
                          data-test="clear-all-button"
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>
                </GridRow>
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  false,
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      size={12}
                    >
                      <GridRow
                        reverse={false}
                      >
                        <GridColumn
                          size={12}
                          style={
                            Object {
                              "alignItems": "baseline",
                              "display": "flex",
                              "marginBottom": "1rem",
                            }
                          }
                        >
                          <KeyValuePair
                            advanced={false}
                            onKeyChange={undefined}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "==",
                                "value": "",
                              }
                            }
                            reportSuiteId={0}
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="add-button"
                            disabled={false}
                            element="button"
                            icon={<AddCircle />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />
                        </GridColumn>
                      </GridRow>
                      <GridRow
                        reverse={false}
                      >
                        <GridColumn
                          size={7}
                        >
                          <Label
                            value="Signal Status"
                          >
                            <Select
                              className="signal-status"
                              data-test="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "ALL",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "UNUSED",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "USED",
                                  },
                                ]
                              }
                              quiet={true}
                              value="ALL"
                            />
                          </Label>
                          <Label
                            value="View Records For"
                          >
                            <Select
                              className="view-records"
                              data-test="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": "1D",
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": "7D",
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": "14D",
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": "30D",
                                  },
                                  Object {
                                    "label": "Custom Date Range",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value="7D"
                            />
                          </Label>
                          <Label
                            value="Minimum Counts"
                          >
                            <NumberInput
                              className="min-counts"
                              data-test="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />
                          </Label>
                        </GridColumn>
                        <GridColumn
                          size={3}
                        >
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="search-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Search"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="cta"
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="clear-all-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Clear All"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="secondary"
                          />
                        </GridColumn>
                      </GridRow>
                    </GridColumn>
                  </GridRow>,
                ],
                "data-test": "search-form",
              },
              "ref": null,
              "rendered": Array [
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <GridColumn
                      size={12}
                    >
                      <GridRow
                        reverse={false}
                      >
                        <GridColumn
                          size={12}
                          style={
                            Object {
                              "alignItems": "baseline",
                              "display": "flex",
                              "marginBottom": "1rem",
                            }
                          }
                        >
                          <KeyValuePair
                            advanced={false}
                            onKeyChange={undefined}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "==",
                                "value": "",
                              }
                            }
                            reportSuiteId={0}
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="add-button"
                            disabled={false}
                            element="button"
                            icon={<AddCircle />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />
                        </GridColumn>
                      </GridRow>
                      <GridRow
                        reverse={false}
                      >
                        <GridColumn
                          size={7}
                        >
                          <Label
                            value="Signal Status"
                          >
                            <Select
                              className="signal-status"
                              data-test="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "ALL",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "UNUSED",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "USED",
                                  },
                                ]
                              }
                              quiet={true}
                              value="ALL"
                            />
                          </Label>
                          <Label
                            value="View Records For"
                          >
                            <Select
                              className="view-records"
                              data-test="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": "1D",
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": "7D",
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": "14D",
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": "30D",
                                  },
                                  Object {
                                    "label": "Custom Date Range",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value="7D"
                            />
                          </Label>
                          <Label
                            value="Minimum Counts"
                          >
                            <NumberInput
                              className="min-counts"
                              data-test="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />
                          </Label>
                        </GridColumn>
                        <GridColumn
                          size={3}
                        >
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="search-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Search"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="cta"
                          />
                          <Button
                            autoFocus={false}
                            block={false}
                            data-test="clear-all-button"
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Clear All"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="secondary"
                          />
                        </GridColumn>
                      </GridRow>
                    </GridColumn>,
                    "reverse": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        Array [
                          <GridRow
                            reverse={false}
                          >
                            <GridColumn
                              size={12}
                              style={
                                Object {
                                  "alignItems": "baseline",
                                  "display": "flex",
                                  "marginBottom": "1rem",
                                }
                              }
                            >
                              <KeyValuePair
                                advanced={false}
                                onKeyChange={undefined}
                                onOperatorChange={[MockFunction]}
                                onValueChange={[MockFunction]}
                                pair={
                                  Object {
                                    "id": 0,
                                    "key": "",
                                    "operator": "==",
                                    "value": "",
                                  }
                                }
                                reportSuiteId={0}
                              />
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="add-button"
                                disabled={false}
                                element="button"
                                icon={<AddCircle />}
                                invalid={false}
                                label="Add"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={true}
                                selected={false}
                                variant="action"
                              />
                            </GridColumn>
                          </GridRow>,
                        ],
                        <GridRow
                          reverse={false}
                        >
                          <GridColumn
                            size={7}
                          >
                            <Label
                              value="Signal Status"
                            >
                              <Select
                                className="signal-status"
                                data-test="signal-status"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All",
                                      "value": "ALL",
                                    },
                                    Object {
                                      "label": "Unused Signals",
                                      "value": "UNUSED",
                                    },
                                    Object {
                                      "label": "Signals Included in Traits",
                                      "value": "USED",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="ALL"
                              />
                            </Label>
                            <Label
                              value="View Records For"
                            >
                              <Select
                                className="view-records"
                                data-test="view-records"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Last 1 Day",
                                      "value": "1D",
                                    },
                                    Object {
                                      "label": "Last 7 Days",
                                      "value": "7D",
                                    },
                                    Object {
                                      "label": "Last 14 Days",
                                      "value": "14D",
                                    },
                                    Object {
                                      "label": "Last 30 Days",
                                      "value": "30D",
                                    },
                                    Object {
                                      "label": "Custom Date Range",
                                      "value": "custom",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="7D"
                              />
                            </Label>
                            <Label
                              value="Minimum Counts"
                            >
                              <NumberInput
                                className="min-counts"
                                data-test="min-counts"
                                decrementTitle="Decrement"
                                disabled={false}
                                incrementTitle="Increment"
                                invalid={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a number"
                                quiet={true}
                                readOnly={false}
                                step={1}
                                value={1000}
                              />
                            </Label>
                          </GridColumn>
                          <GridColumn
                            size={3}
                          >
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="search-button"
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Search"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="cta"
                            />
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="clear-all-button"
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Clear All"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="secondary"
                            />
                          </GridColumn>
                        </GridRow>,
                      ],
                      "size": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "0",
                        "nodeType": "class",
                        "props": Object {
                          "children": <GridColumn
                            size={12}
                            style={
                              Object {
                                "alignItems": "baseline",
                                "display": "flex",
                                "marginBottom": "1rem",
                              }
                            }
                          >
                            <KeyValuePair
                              advanced={false}
                              onKeyChange={undefined}
                              onOperatorChange={[MockFunction]}
                              onValueChange={[MockFunction]}
                              pair={
                                Object {
                                  "id": 0,
                                  "key": "",
                                  "operator": "==",
                                  "value": "",
                                }
                              }
                              reportSuiteId={0}
                            />
                            <Button
                              autoFocus={false}
                              block={false}
                              data-test="add-button"
                              disabled={false}
                              element="button"
                              icon={<AddCircle />}
                              invalid={false}
                              label="Add"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={true}
                              selected={false}
                              variant="action"
                            />
                          </GridColumn>,
                          "reverse": false,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": Array [
                              <KeyValuePair
                                advanced={false}
                                onKeyChange={undefined}
                                onOperatorChange={[MockFunction]}
                                onValueChange={[MockFunction]}
                                pair={
                                  Object {
                                    "id": 0,
                                    "key": "",
                                    "operator": "==",
                                    "value": "",
                                  }
                                }
                                reportSuiteId={0}
                              />,
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="add-button"
                                disabled={false}
                                element="button"
                                icon={<AddCircle />}
                                invalid={false}
                                label="Add"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={true}
                                selected={false}
                                variant="action"
                              />,
                              false,
                            ],
                            "size": 12,
                            "style": Object {
                              "alignItems": "baseline",
                              "display": "flex",
                              "marginBottom": "1rem",
                            },
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": "0",
                              "nodeType": "class",
                              "props": Object {
                                "advanced": false,
                                "onKeyChange": undefined,
                                "onOperatorChange": [MockFunction],
                                "onValueChange": [MockFunction],
                                "pair": Object {
                                  "id": 0,
                                  "key": "",
                                  "operator": "==",
                                  "value": "",
                                },
                                "reportSuiteId": 0,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "autoFocus": false,
                                "block": false,
                                "data-test": "add-button",
                                "disabled": false,
                                "element": "button",
                                "icon": <AddCircle />,
                                "invalid": false,
                                "label": "Add",
                                "logic": false,
                                "onClick": [MockFunction],
                                "quiet": true,
                                "selected": false,
                                "variant": "action",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            false,
                          ],
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <GridColumn
                              size={7}
                            >
                              <Label
                                value="Signal Status"
                              >
                                <Select
                                  className="signal-status"
                                  data-test="signal-status"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "All",
                                        "value": "ALL",
                                      },
                                      Object {
                                        "label": "Unused Signals",
                                        "value": "UNUSED",
                                      },
                                      Object {
                                        "label": "Signals Included in Traits",
                                        "value": "USED",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="ALL"
                                />
                              </Label>
                              <Label
                                value="View Records For"
                              >
                                <Select
                                  className="view-records"
                                  data-test="view-records"
                                  onChange={[MockFunction]}
                                  options={
                                    Array [
                                      Object {
                                        "label": "Last 1 Day",
                                        "value": "1D",
                                      },
                                      Object {
                                        "label": "Last 7 Days",
                                        "value": "7D",
                                      },
                                      Object {
                                        "label": "Last 14 Days",
                                        "value": "14D",
                                      },
                                      Object {
                                        "label": "Last 30 Days",
                                        "value": "30D",
                                      },
                                      Object {
                                        "label": "Custom Date Range",
                                        "value": "custom",
                                      },
                                    ]
                                  }
                                  quiet={true}
                                  value="7D"
                                />
                              </Label>
                              <Label
                                value="Minimum Counts"
                              >
                                <NumberInput
                                  className="min-counts"
                                  data-test="min-counts"
                                  decrementTitle="Decrement"
                                  disabled={false}
                                  incrementTitle="Increment"
                                  invalid={false}
                                  onChange={[MockFunction]}
                                  placeholder="Enter a number"
                                  quiet={true}
                                  readOnly={false}
                                  step={1}
                                  value={1000}
                                />
                              </Label>
                            </GridColumn>,
                            <GridColumn
                              size={3}
                            >
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="search-button"
                                disabled={false}
                                element="button"
                                invalid={false}
                                label="Search"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={false}
                                selected={false}
                                variant="cta"
                              />
                              <Button
                                autoFocus={false}
                                block={false}
                                data-test="clear-all-button"
                                disabled={false}
                                element="button"
                                invalid={false}
                                label="Clear All"
                                logic={false}
                                onClick={[MockFunction]}
                                quiet={false}
                                selected={false}
                                variant="secondary"
                              />
                            </GridColumn>,
                          ],
                          "reverse": false,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": Array [
                                <Label
                                  value="Signal Status"
                                >
                                  <Select
                                    className="signal-status"
                                    data-test="signal-status"
                                    onChange={[MockFunction]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "All",
                                          "value": "ALL",
                                        },
                                        Object {
                                          "label": "Unused Signals",
                                          "value": "UNUSED",
                                        },
                                        Object {
                                          "label": "Signals Included in Traits",
                                          "value": "USED",
                                        },
                                      ]
                                    }
                                    quiet={true}
                                    value="ALL"
                                  />
                                </Label>,
                                <Label
                                  value="View Records For"
                                >
                                  <Select
                                    className="view-records"
                                    data-test="view-records"
                                    onChange={[MockFunction]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Last 1 Day",
                                          "value": "1D",
                                        },
                                        Object {
                                          "label": "Last 7 Days",
                                          "value": "7D",
                                        },
                                        Object {
                                          "label": "Last 14 Days",
                                          "value": "14D",
                                        },
                                        Object {
                                          "label": "Last 30 Days",
                                          "value": "30D",
                                        },
                                        Object {
                                          "label": "Custom Date Range",
                                          "value": "custom",
                                        },
                                      ]
                                    }
                                    quiet={true}
                                    value="7D"
                                  />
                                </Label>,
                                null,
                                <Label
                                  value="Minimum Counts"
                                >
                                  <NumberInput
                                    className="min-counts"
                                    data-test="min-counts"
                                    decrementTitle="Decrement"
                                    disabled={false}
                                    incrementTitle="Increment"
                                    invalid={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a number"
                                    quiet={true}
                                    readOnly={false}
                                    step={1}
                                    value={1000}
                                  />
                                </Label>,
                              ],
                              "size": 7,
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": <Select
                                    className="signal-status"
                                    data-test="signal-status"
                                    onChange={[MockFunction]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "All",
                                          "value": "ALL",
                                        },
                                        Object {
                                          "label": "Unused Signals",
                                          "value": "UNUSED",
                                        },
                                        Object {
                                          "label": "Signals Included in Traits",
                                          "value": "USED",
                                        },
                                      ]
                                    }
                                    quiet={true}
                                    value="ALL"
                                  />,
                                  "value": "Signal Status",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "className": "signal-status",
                                    "data-test": "signal-status",
                                    "onChange": [MockFunction],
                                    "options": Array [
                                      Object {
                                        "label": "All",
                                        "value": "ALL",
                                      },
                                      Object {
                                        "label": "Unused Signals",
                                        "value": "UNUSED",
                                      },
                                      Object {
                                        "label": "Signals Included in Traits",
                                        "value": "USED",
                                      },
                                    ],
                                    "quiet": true,
                                    "value": "ALL",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": [Function],
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": <Select
                                    className="view-records"
                                    data-test="view-records"
                                    onChange={[MockFunction]}
                                    options={
                                      Array [
                                        Object {
                                          "label": "Last 1 Day",
                                          "value": "1D",
                                        },
                                        Object {
                                          "label": "Last 7 Days",
                                          "value": "7D",
                                        },
                                        Object {
                                          "label": "Last 14 Days",
                                          "value": "14D",
                                        },
                                        Object {
                                          "label": "Last 30 Days",
                                          "value": "30D",
                                        },
                                        Object {
                                          "label": "Custom Date Range",
                                          "value": "custom",
                                        },
                                      ]
                                    }
                                    quiet={true}
                                    value="7D"
                                  />,
                                  "value": "View Records For",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "className": "view-records",
                                    "data-test": "view-records",
                                    "onChange": [MockFunction],
                                    "options": Array [
                                      Object {
                                        "label": "Last 1 Day",
                                        "value": "1D",
                                      },
                                      Object {
                                        "label": "Last 7 Days",
                                        "value": "7D",
                                      },
                                      Object {
                                        "label": "Last 14 Days",
                                        "value": "14D",
                                      },
                                      Object {
                                        "label": "Last 30 Days",
                                        "value": "30D",
                                      },
                                      Object {
                                        "label": "Custom Date Range",
                                        "value": "custom",
                                      },
                                    ],
                                    "quiet": true,
                                    "value": "7D",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": [Function],
                              },
                              null,
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "children": <NumberInput
                                    className="min-counts"
                                    data-test="min-counts"
                                    decrementTitle="Decrement"
                                    disabled={false}
                                    incrementTitle="Increment"
                                    invalid={false}
                                    onChange={[MockFunction]}
                                    placeholder="Enter a number"
                                    quiet={true}
                                    readOnly={false}
                                    step={1}
                                    value={1000}
                                  />,
                                  "value": "Minimum Counts",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "class",
                                  "props": Object {
                                    "className": "min-counts",
                                    "data-test": "min-counts",
                                    "decrementTitle": "Decrement",
                                    "disabled": false,
                                    "incrementTitle": "Increment",
                                    "invalid": false,
                                    "onChange": [MockFunction],
                                    "placeholder": "Enter a number",
                                    "quiet": true,
                                    "readOnly": false,
                                    "step": 1,
                                    "value": 1000,
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": [Function],
                              },
                            ],
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": Array [
                                <Button
                                  autoFocus={false}
                                  block={false}
                                  data-test="search-button"
                                  disabled={false}
                                  element="button"
                                  invalid={false}
                                  label="Search"
                                  logic={false}
                                  onClick={[MockFunction]}
                                  quiet={false}
                                  selected={false}
                                  variant="cta"
                                />,
                                <Button
                                  autoFocus={false}
                                  block={false}
                                  data-test="clear-all-button"
                                  disabled={false}
                                  element="button"
                                  invalid={false}
                                  label="Clear All"
                                  logic={false}
                                  onClick={[MockFunction]}
                                  quiet={false}
                                  selected={false}
                                  variant="secondary"
                                />,
                              ],
                              "size": 3,
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "autoFocus": false,
                                  "block": false,
                                  "data-test": "search-button",
                                  "disabled": false,
                                  "element": "button",
                                  "invalid": false,
                                  "label": "Search",
                                  "logic": false,
                                  "onClick": [MockFunction],
                                  "quiet": false,
                                  "selected": false,
                                  "variant": "cta",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "autoFocus": false,
                                  "block": false,
                                  "data-test": "clear-all-button",
                                  "disabled": false,
                                  "element": "button",
                                  "invalid": false,
                                  "label": "Clear All",
                                  "logic": false,
                                  "onClick": [MockFunction],
                                  "quiet": false,
                                  "selected": false,
                                  "variant": "secondary",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                            ],
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
