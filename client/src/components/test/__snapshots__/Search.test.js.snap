// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> component rendering matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    advanced={false}
    keyValuePairs={
      Array [
        Object {
          "id": 0,
          "key": "",
          "operator": "=",
          "value": "",
        },
      ]
    }
    minCount={1000}
    onAddClick={[MockFunction]}
    onAdvancedSearchChange={[MockFunction]}
    onClearAll={[MockFunction]}
    onKeyChange={[MockFunction]}
    onMinCountChange={[MockFunction]}
    onOperatorChange={[MockFunction]}
    onRemoveClick={[MockFunction]}
    onSearch={[MockFunction]}
    onStatusChange={[MockFunction]}
    onValueChange={[MockFunction]}
    onViewRecordsChange={[MockFunction]}
    status="all"
    viewRecordsFor={7}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <GridColumn
        size={12}
      >
        <Well>
          <AdvancedSearch
            enabled={false}
            onAdvancedSearchChange={[MockFunction]}
          />
          <GridRow
            reverse={false}
          >
            <GridColumn
              size={12}
            >
              <GridRow
                reverse={false}
                valign="bottom"
              >
                <GridColumn
                  size={4}
                >
                  <KeyValuePair
                    onKeyChange={[MockFunction]}
                    onOperatorChange={[MockFunction]}
                    onValueChange={[MockFunction]}
                    pair={
                      Object {
                        "id": 0,
                        "key": "",
                        "operator": "=",
                        "value": "",
                      }
                    }
                  />
                </GridColumn>
                <GridColumn
                  size={2}
                >
                  <Button
                    block={false}
                    className="add-button"
                    disabled={false}
                    element="button"
                    icon={<Add />}
                    invalid={false}
                    label="Add"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={true}
                    selected={false}
                    variant="action"
                  />
                </GridColumn>
              </GridRow>
              <GridRow
                reverse={false}
                valign="bottom"
              >
                <GridColumn
                  size={7}
                >
                  <Label
                    value="Signal Status"
                  >
                    <Select
                      className="signal-status"
                      onChange={[MockFunction]}
                      options={
                        Array [
                          Object {
                            "label": "All",
                            "value": "all",
                          },
                          Object {
                            "label": "Unused Signals",
                            "value": "unused",
                          },
                          Object {
                            "label": "Signals Included in Traits",
                            "value": "includedInTraits",
                          },
                        ]
                      }
                      quiet={true}
                      value="all"
                    />
                  </Label>
                  <Label
                    value="View Records For"
                  >
                    <Select
                      className="view-records"
                      onChange={[MockFunction]}
                      options={
                        Array [
                          Object {
                            "label": "Last 1 Day",
                            "value": 1,
                          },
                          Object {
                            "label": "Last 7 Days",
                            "value": 7,
                          },
                          Object {
                            "label": "Last 14 Days",
                            "value": 14,
                          },
                          Object {
                            "label": "Last 30 Days",
                            "value": 30,
                          },
                          Object {
                            "label": "Custom",
                            "value": "custom",
                          },
                        ]
                      }
                      quiet={true}
                      value={7}
                    />
                  </Label>
                  <Label
                    value="Minimum Counts"
                  >
                    <NumberInput
                      className="min-counts"
                      decrementTitle="Decrement"
                      disabled={false}
                      incrementTitle="Increment"
                      invalid={false}
                      onChange={[MockFunction]}
                      placeholder="Enter a number"
                      quiet={true}
                      readOnly={false}
                      step={1}
                      value={1000}
                    />
                  </Label>
                </GridColumn>
                <GridColumn
                  size={3}
                >
                  <Button
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label="Search"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={false}
                    selected={false}
                    variant="cta"
                  />
                  <Button
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label="Clear All"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={false}
                    selected={false}
                    variant="secondary"
                  />
                </GridColumn>
              </GridRow>
            </GridColumn>
          </GridRow>
        </Well>
      </GridColumn>,
      "reverse": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Well>
          <AdvancedSearch
            enabled={false}
            onAdvancedSearchChange={[MockFunction]}
          />
          <GridRow
            reverse={false}
          >
            <GridColumn
              size={12}
            >
              <GridRow
                reverse={false}
                valign="bottom"
              >
                <GridColumn
                  size={4}
                >
                  <KeyValuePair
                    onKeyChange={[MockFunction]}
                    onOperatorChange={[MockFunction]}
                    onValueChange={[MockFunction]}
                    pair={
                      Object {
                        "id": 0,
                        "key": "",
                        "operator": "=",
                        "value": "",
                      }
                    }
                  />
                </GridColumn>
                <GridColumn
                  size={2}
                >
                  <Button
                    block={false}
                    className="add-button"
                    disabled={false}
                    element="button"
                    icon={<Add />}
                    invalid={false}
                    label="Add"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={true}
                    selected={false}
                    variant="action"
                  />
                </GridColumn>
              </GridRow>
              <GridRow
                reverse={false}
                valign="bottom"
              >
                <GridColumn
                  size={7}
                >
                  <Label
                    value="Signal Status"
                  >
                    <Select
                      className="signal-status"
                      onChange={[MockFunction]}
                      options={
                        Array [
                          Object {
                            "label": "All",
                            "value": "all",
                          },
                          Object {
                            "label": "Unused Signals",
                            "value": "unused",
                          },
                          Object {
                            "label": "Signals Included in Traits",
                            "value": "includedInTraits",
                          },
                        ]
                      }
                      quiet={true}
                      value="all"
                    />
                  </Label>
                  <Label
                    value="View Records For"
                  >
                    <Select
                      className="view-records"
                      onChange={[MockFunction]}
                      options={
                        Array [
                          Object {
                            "label": "Last 1 Day",
                            "value": 1,
                          },
                          Object {
                            "label": "Last 7 Days",
                            "value": 7,
                          },
                          Object {
                            "label": "Last 14 Days",
                            "value": 14,
                          },
                          Object {
                            "label": "Last 30 Days",
                            "value": 30,
                          },
                          Object {
                            "label": "Custom",
                            "value": "custom",
                          },
                        ]
                      }
                      quiet={true}
                      value={7}
                    />
                  </Label>
                  <Label
                    value="Minimum Counts"
                  >
                    <NumberInput
                      className="min-counts"
                      decrementTitle="Decrement"
                      disabled={false}
                      incrementTitle="Increment"
                      invalid={false}
                      onChange={[MockFunction]}
                      placeholder="Enter a number"
                      quiet={true}
                      readOnly={false}
                      step={1}
                      value={1000}
                    />
                  </Label>
                </GridColumn>
                <GridColumn
                  size={3}
                >
                  <Button
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label="Search"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={false}
                    selected={false}
                    variant="cta"
                  />
                  <Button
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label="Clear All"
                    logic={false}
                    onClick={[MockFunction]}
                    quiet={false}
                    selected={false}
                    variant="secondary"
                  />
                </GridColumn>
              </GridRow>
            </GridColumn>
          </GridRow>
        </Well>,
        "size": 12,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <AdvancedSearch
              enabled={false}
              onAdvancedSearchChange={[MockFunction]}
            />,
            <GridRow
              reverse={false}
            >
              <GridColumn
                size={12}
              >
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={4}
                  >
                    <KeyValuePair
                      onKeyChange={[MockFunction]}
                      onOperatorChange={[MockFunction]}
                      onValueChange={[MockFunction]}
                      pair={
                        Object {
                          "id": 0,
                          "key": "",
                          "operator": "=",
                          "value": "",
                        }
                      }
                    />
                  </GridColumn>
                  <GridColumn
                    size={2}
                  >
                    <Button
                      block={false}
                      className="add-button"
                      disabled={false}
                      element="button"
                      icon={<Add />}
                      invalid={false}
                      label="Add"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={true}
                      selected={false}
                      variant="action"
                    />
                  </GridColumn>
                </GridRow>
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={7}
                  >
                    <Label
                      value="Signal Status"
                    >
                      <Select
                        className="signal-status"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "All",
                              "value": "all",
                            },
                            Object {
                              "label": "Unused Signals",
                              "value": "unused",
                            },
                            Object {
                              "label": "Signals Included in Traits",
                              "value": "includedInTraits",
                            },
                          ]
                        }
                        quiet={true}
                        value="all"
                      />
                    </Label>
                    <Label
                      value="View Records For"
                    >
                      <Select
                        className="view-records"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "Last 1 Day",
                              "value": 1,
                            },
                            Object {
                              "label": "Last 7 Days",
                              "value": 7,
                            },
                            Object {
                              "label": "Last 14 Days",
                              "value": 14,
                            },
                            Object {
                              "label": "Last 30 Days",
                              "value": 30,
                            },
                            Object {
                              "label": "Custom",
                              "value": "custom",
                            },
                          ]
                        }
                        quiet={true}
                        value={7}
                      />
                    </Label>
                    <Label
                      value="Minimum Counts"
                    >
                      <NumberInput
                        className="min-counts"
                        decrementTitle="Decrement"
                        disabled={false}
                        incrementTitle="Increment"
                        invalid={false}
                        onChange={[MockFunction]}
                        placeholder="Enter a number"
                        quiet={true}
                        readOnly={false}
                        step={1}
                        value={1000}
                      />
                    </Label>
                  </GridColumn>
                  <GridColumn
                    size={3}
                  >
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Search"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="cta"
                    />
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Clear All"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="secondary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "enabled": false,
              "onAdvancedSearchChange": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <GridColumn
                size={12}
              >
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={4}
                  >
                    <KeyValuePair
                      onKeyChange={[MockFunction]}
                      onOperatorChange={[MockFunction]}
                      onValueChange={[MockFunction]}
                      pair={
                        Object {
                          "id": 0,
                          "key": "",
                          "operator": "=",
                          "value": "",
                        }
                      }
                    />
                  </GridColumn>
                  <GridColumn
                    size={2}
                  >
                    <Button
                      block={false}
                      className="add-button"
                      disabled={false}
                      element="button"
                      icon={<Add />}
                      invalid={false}
                      label="Add"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={true}
                      selected={false}
                      variant="action"
                    />
                  </GridColumn>
                </GridRow>
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={7}
                  >
                    <Label
                      value="Signal Status"
                    >
                      <Select
                        className="signal-status"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "All",
                              "value": "all",
                            },
                            Object {
                              "label": "Unused Signals",
                              "value": "unused",
                            },
                            Object {
                              "label": "Signals Included in Traits",
                              "value": "includedInTraits",
                            },
                          ]
                        }
                        quiet={true}
                        value="all"
                      />
                    </Label>
                    <Label
                      value="View Records For"
                    >
                      <Select
                        className="view-records"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "Last 1 Day",
                              "value": 1,
                            },
                            Object {
                              "label": "Last 7 Days",
                              "value": 7,
                            },
                            Object {
                              "label": "Last 14 Days",
                              "value": 14,
                            },
                            Object {
                              "label": "Last 30 Days",
                              "value": 30,
                            },
                            Object {
                              "label": "Custom",
                              "value": "custom",
                            },
                          ]
                        }
                        quiet={true}
                        value={7}
                      />
                    </Label>
                    <Label
                      value="Minimum Counts"
                    >
                      <NumberInput
                        className="min-counts"
                        decrementTitle="Decrement"
                        disabled={false}
                        incrementTitle="Increment"
                        invalid={false}
                        onChange={[MockFunction]}
                        placeholder="Enter a number"
                        quiet={true}
                        readOnly={false}
                        step={1}
                        value={1000}
                      />
                    </Label>
                  </GridColumn>
                  <GridColumn
                    size={3}
                  >
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Search"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="cta"
                    />
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Clear All"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="secondary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>,
              "reverse": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  Array [
                    <GridRow
                      reverse={false}
                      valign="bottom"
                    >
                      <GridColumn
                        size={4}
                      >
                        <KeyValuePair
                          onKeyChange={[MockFunction]}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "=",
                              "value": "",
                            }
                          }
                        />
                      </GridColumn>
                      <GridColumn
                        size={2}
                      >
                        <Button
                          block={false}
                          className="add-button"
                          disabled={false}
                          element="button"
                          icon={<Add />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>
                    </GridRow>,
                  ],
                  <GridRow
                    reverse={false}
                    valign="bottom"
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "all",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "unused",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "includedInTraits",
                              },
                            ]
                          }
                          quiet={true}
                          value="all"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": 1,
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": 7,
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": 14,
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": 30,
                              },
                              Object {
                                "label": "Custom",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value={7}
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>,
                ],
                "size": 12,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <GridColumn
                        size={4}
                      >
                        <KeyValuePair
                          onKeyChange={[MockFunction]}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "=",
                              "value": "",
                            }
                          }
                        />
                      </GridColumn>,
                      <GridColumn
                        size={2}
                      >
                        <Button
                          block={false}
                          className="add-button"
                          disabled={false}
                          element="button"
                          icon={<Add />}
                          invalid={false}
                          label="Add"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={true}
                          selected={false}
                          variant="action"
                        />
                      </GridColumn>,
                    ],
                    "reverse": false,
                    "valign": "bottom",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <KeyValuePair
                          onKeyChange={[MockFunction]}
                          onOperatorChange={[MockFunction]}
                          onValueChange={[MockFunction]}
                          pair={
                            Object {
                              "id": 0,
                              "key": "",
                              "operator": "=",
                              "value": "",
                            }
                          }
                        />,
                        "size": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": "0",
                        "nodeType": "class",
                        "props": Object {
                          "onKeyChange": [MockFunction],
                          "onOperatorChange": [MockFunction],
                          "onValueChange": [MockFunction],
                          "pair": Object {
                            "id": 0,
                            "key": "",
                            "operator": "=",
                            "value": "",
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Button
                            block={false}
                            className="add-button"
                            disabled={false}
                            element="button"
                            icon={<Add />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />,
                          false,
                        ],
                        "size": 2,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "block": false,
                            "className": "add-button",
                            "disabled": false,
                            "element": "button",
                            "icon": <Add />,
                            "invalid": false,
                            "label": "Add",
                            "logic": false,
                            "onClick": [MockFunction],
                            "quiet": true,
                            "selected": false,
                            "variant": "action",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        false,
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "all",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "unused",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "includedInTraits",
                                },
                              ]
                            }
                            quiet={true}
                            value="all"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": 1,
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": 7,
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": 14,
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": 30,
                                },
                                Object {
                                  "label": "Custom",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value={7}
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>,
                      <GridColumn
                        size={3}
                      >
                        <Button
                          block={false}
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          block={false}
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>,
                    ],
                    "reverse": false,
                    "valign": "bottom",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Label
                            value="Signal Status"
                          >
                            <Select
                              className="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "all",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "unused",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "includedInTraits",
                                  },
                                ]
                              }
                              quiet={true}
                              value="all"
                            />
                          </Label>,
                          <Label
                            value="View Records For"
                          >
                            <Select
                              className="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": 7,
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": 14,
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": 30,
                                  },
                                  Object {
                                    "label": "Custom",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value={7}
                            />
                          </Label>,
                          <Label
                            value="Minimum Counts"
                          >
                            <NumberInput
                              className="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />
                          </Label>,
                        ],
                        "size": 7,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <Select
                              className="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "all",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "unused",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "includedInTraits",
                                  },
                                ]
                              }
                              quiet={true}
                              value="all"
                            />,
                            "value": "Signal Status",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "className": "signal-status",
                              "onChange": [MockFunction],
                              "options": Array [
                                Object {
                                  "label": "All",
                                  "value": "all",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "unused",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "includedInTraits",
                                },
                              ],
                              "quiet": true,
                              "value": "all",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <Select
                              className="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": 7,
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": 14,
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": 30,
                                  },
                                  Object {
                                    "label": "Custom",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value={7}
                            />,
                            "value": "View Records For",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "className": "view-records",
                              "onChange": [MockFunction],
                              "options": Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": 1,
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": 7,
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": 14,
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": 30,
                                },
                                Object {
                                  "label": "Custom",
                                  "value": "custom",
                                },
                              ],
                              "quiet": true,
                              "value": 7,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "children": <NumberInput
                              className="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />,
                            "value": "Minimum Counts",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "className": "min-counts",
                              "decrementTitle": "Decrement",
                              "disabled": false,
                              "incrementTitle": "Increment",
                              "invalid": false,
                              "onChange": [MockFunction],
                              "placeholder": "Enter a number",
                              "quiet": true,
                              "readOnly": false,
                              "step": 1,
                              "value": 1000,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Button
                            block={false}
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Search"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="cta"
                          />,
                          <Button
                            block={false}
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Clear All"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="secondary"
                          />,
                        ],
                        "size": 3,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "block": false,
                            "disabled": false,
                            "element": "button",
                            "invalid": false,
                            "label": "Search",
                            "logic": false,
                            "onClick": [MockFunction],
                            "quiet": false,
                            "selected": false,
                            "variant": "cta",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "block": false,
                            "disabled": false,
                            "element": "button",
                            "invalid": false,
                            "label": "Clear All",
                            "logic": false,
                            "onClick": [MockFunction],
                            "quiet": false,
                            "selected": false,
                            "variant": "secondary",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <GridColumn
          size={12}
        >
          <Well>
            <AdvancedSearch
              enabled={false}
              onAdvancedSearchChange={[MockFunction]}
            />
            <GridRow
              reverse={false}
            >
              <GridColumn
                size={12}
              >
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={4}
                  >
                    <KeyValuePair
                      onKeyChange={[MockFunction]}
                      onOperatorChange={[MockFunction]}
                      onValueChange={[MockFunction]}
                      pair={
                        Object {
                          "id": 0,
                          "key": "",
                          "operator": "=",
                          "value": "",
                        }
                      }
                    />
                  </GridColumn>
                  <GridColumn
                    size={2}
                  >
                    <Button
                      block={false}
                      className="add-button"
                      disabled={false}
                      element="button"
                      icon={<Add />}
                      invalid={false}
                      label="Add"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={true}
                      selected={false}
                      variant="action"
                    />
                  </GridColumn>
                </GridRow>
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={7}
                  >
                    <Label
                      value="Signal Status"
                    >
                      <Select
                        className="signal-status"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "All",
                              "value": "all",
                            },
                            Object {
                              "label": "Unused Signals",
                              "value": "unused",
                            },
                            Object {
                              "label": "Signals Included in Traits",
                              "value": "includedInTraits",
                            },
                          ]
                        }
                        quiet={true}
                        value="all"
                      />
                    </Label>
                    <Label
                      value="View Records For"
                    >
                      <Select
                        className="view-records"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "Last 1 Day",
                              "value": 1,
                            },
                            Object {
                              "label": "Last 7 Days",
                              "value": 7,
                            },
                            Object {
                              "label": "Last 14 Days",
                              "value": 14,
                            },
                            Object {
                              "label": "Last 30 Days",
                              "value": 30,
                            },
                            Object {
                              "label": "Custom",
                              "value": "custom",
                            },
                          ]
                        }
                        quiet={true}
                        value={7}
                      />
                    </Label>
                    <Label
                      value="Minimum Counts"
                    >
                      <NumberInput
                        className="min-counts"
                        decrementTitle="Decrement"
                        disabled={false}
                        incrementTitle="Increment"
                        invalid={false}
                        onChange={[MockFunction]}
                        placeholder="Enter a number"
                        quiet={true}
                        readOnly={false}
                        step={1}
                        value={1000}
                      />
                    </Label>
                  </GridColumn>
                  <GridColumn
                    size={3}
                  >
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Search"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="cta"
                    />
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Clear All"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="secondary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>
          </Well>
        </GridColumn>,
        "reverse": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Well>
            <AdvancedSearch
              enabled={false}
              onAdvancedSearchChange={[MockFunction]}
            />
            <GridRow
              reverse={false}
            >
              <GridColumn
                size={12}
              >
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={4}
                  >
                    <KeyValuePair
                      onKeyChange={[MockFunction]}
                      onOperatorChange={[MockFunction]}
                      onValueChange={[MockFunction]}
                      pair={
                        Object {
                          "id": 0,
                          "key": "",
                          "operator": "=",
                          "value": "",
                        }
                      }
                    />
                  </GridColumn>
                  <GridColumn
                    size={2}
                  >
                    <Button
                      block={false}
                      className="add-button"
                      disabled={false}
                      element="button"
                      icon={<Add />}
                      invalid={false}
                      label="Add"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={true}
                      selected={false}
                      variant="action"
                    />
                  </GridColumn>
                </GridRow>
                <GridRow
                  reverse={false}
                  valign="bottom"
                >
                  <GridColumn
                    size={7}
                  >
                    <Label
                      value="Signal Status"
                    >
                      <Select
                        className="signal-status"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "All",
                              "value": "all",
                            },
                            Object {
                              "label": "Unused Signals",
                              "value": "unused",
                            },
                            Object {
                              "label": "Signals Included in Traits",
                              "value": "includedInTraits",
                            },
                          ]
                        }
                        quiet={true}
                        value="all"
                      />
                    </Label>
                    <Label
                      value="View Records For"
                    >
                      <Select
                        className="view-records"
                        onChange={[MockFunction]}
                        options={
                          Array [
                            Object {
                              "label": "Last 1 Day",
                              "value": 1,
                            },
                            Object {
                              "label": "Last 7 Days",
                              "value": 7,
                            },
                            Object {
                              "label": "Last 14 Days",
                              "value": 14,
                            },
                            Object {
                              "label": "Last 30 Days",
                              "value": 30,
                            },
                            Object {
                              "label": "Custom",
                              "value": "custom",
                            },
                          ]
                        }
                        quiet={true}
                        value={7}
                      />
                    </Label>
                    <Label
                      value="Minimum Counts"
                    >
                      <NumberInput
                        className="min-counts"
                        decrementTitle="Decrement"
                        disabled={false}
                        incrementTitle="Increment"
                        invalid={false}
                        onChange={[MockFunction]}
                        placeholder="Enter a number"
                        quiet={true}
                        readOnly={false}
                        step={1}
                        value={1000}
                      />
                    </Label>
                  </GridColumn>
                  <GridColumn
                    size={3}
                  >
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Search"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="cta"
                    />
                    <Button
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label="Clear All"
                      logic={false}
                      onClick={[MockFunction]}
                      quiet={false}
                      selected={false}
                      variant="secondary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>
          </Well>,
          "size": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <AdvancedSearch
                enabled={false}
                onAdvancedSearchChange={[MockFunction]}
              />,
              <GridRow
                reverse={false}
              >
                <GridColumn
                  size={12}
                >
                  <GridRow
                    reverse={false}
                    valign="bottom"
                  >
                    <GridColumn
                      size={4}
                    >
                      <KeyValuePair
                        onKeyChange={[MockFunction]}
                        onOperatorChange={[MockFunction]}
                        onValueChange={[MockFunction]}
                        pair={
                          Object {
                            "id": 0,
                            "key": "",
                            "operator": "=",
                            "value": "",
                          }
                        }
                      />
                    </GridColumn>
                    <GridColumn
                      size={2}
                    >
                      <Button
                        block={false}
                        className="add-button"
                        disabled={false}
                        element="button"
                        icon={<Add />}
                        invalid={false}
                        label="Add"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={true}
                        selected={false}
                        variant="action"
                      />
                    </GridColumn>
                  </GridRow>
                  <GridRow
                    reverse={false}
                    valign="bottom"
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "all",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "unused",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "includedInTraits",
                              },
                            ]
                          }
                          quiet={true}
                          value="all"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": 1,
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": 7,
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": 14,
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": 30,
                              },
                              Object {
                                "label": "Custom",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value={7}
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "enabled": false,
                "onAdvancedSearchChange": [MockFunction],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <GridColumn
                  size={12}
                >
                  <GridRow
                    reverse={false}
                    valign="bottom"
                  >
                    <GridColumn
                      size={4}
                    >
                      <KeyValuePair
                        onKeyChange={[MockFunction]}
                        onOperatorChange={[MockFunction]}
                        onValueChange={[MockFunction]}
                        pair={
                          Object {
                            "id": 0,
                            "key": "",
                            "operator": "=",
                            "value": "",
                          }
                        }
                      />
                    </GridColumn>
                    <GridColumn
                      size={2}
                    >
                      <Button
                        block={false}
                        className="add-button"
                        disabled={false}
                        element="button"
                        icon={<Add />}
                        invalid={false}
                        label="Add"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={true}
                        selected={false}
                        variant="action"
                      />
                    </GridColumn>
                  </GridRow>
                  <GridRow
                    reverse={false}
                    valign="bottom"
                  >
                    <GridColumn
                      size={7}
                    >
                      <Label
                        value="Signal Status"
                      >
                        <Select
                          className="signal-status"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "All",
                                "value": "all",
                              },
                              Object {
                                "label": "Unused Signals",
                                "value": "unused",
                              },
                              Object {
                                "label": "Signals Included in Traits",
                                "value": "includedInTraits",
                              },
                            ]
                          }
                          quiet={true}
                          value="all"
                        />
                      </Label>
                      <Label
                        value="View Records For"
                      >
                        <Select
                          className="view-records"
                          onChange={[MockFunction]}
                          options={
                            Array [
                              Object {
                                "label": "Last 1 Day",
                                "value": 1,
                              },
                              Object {
                                "label": "Last 7 Days",
                                "value": 7,
                              },
                              Object {
                                "label": "Last 14 Days",
                                "value": 14,
                              },
                              Object {
                                "label": "Last 30 Days",
                                "value": 30,
                              },
                              Object {
                                "label": "Custom",
                                "value": "custom",
                              },
                            ]
                          }
                          quiet={true}
                          value={7}
                        />
                      </Label>
                      <Label
                        value="Minimum Counts"
                      >
                        <NumberInput
                          className="min-counts"
                          decrementTitle="Decrement"
                          disabled={false}
                          incrementTitle="Increment"
                          invalid={false}
                          onChange={[MockFunction]}
                          placeholder="Enter a number"
                          quiet={true}
                          readOnly={false}
                          step={1}
                          value={1000}
                        />
                      </Label>
                    </GridColumn>
                    <GridColumn
                      size={3}
                    >
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Search"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="cta"
                      />
                      <Button
                        block={false}
                        disabled={false}
                        element="button"
                        invalid={false}
                        label="Clear All"
                        logic={false}
                        onClick={[MockFunction]}
                        quiet={false}
                        selected={false}
                        variant="secondary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>,
                "reverse": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    Array [
                      <GridRow
                        reverse={false}
                        valign="bottom"
                      >
                        <GridColumn
                          size={4}
                        >
                          <KeyValuePair
                            onKeyChange={[MockFunction]}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "=",
                                "value": "",
                              }
                            }
                          />
                        </GridColumn>
                        <GridColumn
                          size={2}
                        >
                          <Button
                            block={false}
                            className="add-button"
                            disabled={false}
                            element="button"
                            icon={<Add />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />
                        </GridColumn>
                      </GridRow>,
                    ],
                    <GridRow
                      reverse={false}
                      valign="bottom"
                    >
                      <GridColumn
                        size={7}
                      >
                        <Label
                          value="Signal Status"
                        >
                          <Select
                            className="signal-status"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "All",
                                  "value": "all",
                                },
                                Object {
                                  "label": "Unused Signals",
                                  "value": "unused",
                                },
                                Object {
                                  "label": "Signals Included in Traits",
                                  "value": "includedInTraits",
                                },
                              ]
                            }
                            quiet={true}
                            value="all"
                          />
                        </Label>
                        <Label
                          value="View Records For"
                        >
                          <Select
                            className="view-records"
                            onChange={[MockFunction]}
                            options={
                              Array [
                                Object {
                                  "label": "Last 1 Day",
                                  "value": 1,
                                },
                                Object {
                                  "label": "Last 7 Days",
                                  "value": 7,
                                },
                                Object {
                                  "label": "Last 14 Days",
                                  "value": 14,
                                },
                                Object {
                                  "label": "Last 30 Days",
                                  "value": 30,
                                },
                                Object {
                                  "label": "Custom",
                                  "value": "custom",
                                },
                              ]
                            }
                            quiet={true}
                            value={7}
                          />
                        </Label>
                        <Label
                          value="Minimum Counts"
                        >
                          <NumberInput
                            className="min-counts"
                            decrementTitle="Decrement"
                            disabled={false}
                            incrementTitle="Increment"
                            invalid={false}
                            onChange={[MockFunction]}
                            placeholder="Enter a number"
                            quiet={true}
                            readOnly={false}
                            step={1}
                            value={1000}
                          />
                        </Label>
                      </GridColumn>
                      <GridColumn
                        size={3}
                      >
                        <Button
                          block={false}
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Search"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="cta"
                        />
                        <Button
                          block={false}
                          disabled={false}
                          element="button"
                          invalid={false}
                          label="Clear All"
                          logic={false}
                          onClick={[MockFunction]}
                          quiet={false}
                          selected={false}
                          variant="secondary"
                        />
                      </GridColumn>
                    </GridRow>,
                  ],
                  "size": 12,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <GridColumn
                          size={4}
                        >
                          <KeyValuePair
                            onKeyChange={[MockFunction]}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "=",
                                "value": "",
                              }
                            }
                          />
                        </GridColumn>,
                        <GridColumn
                          size={2}
                        >
                          <Button
                            block={false}
                            className="add-button"
                            disabled={false}
                            element="button"
                            icon={<Add />}
                            invalid={false}
                            label="Add"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={true}
                            selected={false}
                            variant="action"
                          />
                        </GridColumn>,
                      ],
                      "reverse": false,
                      "valign": "bottom",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <KeyValuePair
                            onKeyChange={[MockFunction]}
                            onOperatorChange={[MockFunction]}
                            onValueChange={[MockFunction]}
                            pair={
                              Object {
                                "id": 0,
                                "key": "",
                                "operator": "=",
                                "value": "",
                              }
                            }
                          />,
                          "size": 4,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": "0",
                          "nodeType": "class",
                          "props": Object {
                            "onKeyChange": [MockFunction],
                            "onOperatorChange": [MockFunction],
                            "onValueChange": [MockFunction],
                            "pair": Object {
                              "id": 0,
                              "key": "",
                              "operator": "=",
                              "value": "",
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <Button
                              block={false}
                              className="add-button"
                              disabled={false}
                              element="button"
                              icon={<Add />}
                              invalid={false}
                              label="Add"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={true}
                              selected={false}
                              variant="action"
                            />,
                            false,
                          ],
                          "size": 2,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "block": false,
                              "className": "add-button",
                              "disabled": false,
                              "element": "button",
                              "icon": <Add />,
                              "invalid": false,
                              "label": "Add",
                              "logic": false,
                              "onClick": [MockFunction],
                              "quiet": true,
                              "selected": false,
                              "variant": "action",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          false,
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <GridColumn
                          size={7}
                        >
                          <Label
                            value="Signal Status"
                          >
                            <Select
                              className="signal-status"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "All",
                                    "value": "all",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "unused",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "includedInTraits",
                                  },
                                ]
                              }
                              quiet={true}
                              value="all"
                            />
                          </Label>
                          <Label
                            value="View Records For"
                          >
                            <Select
                              className="view-records"
                              onChange={[MockFunction]}
                              options={
                                Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": 7,
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": 14,
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": 30,
                                  },
                                  Object {
                                    "label": "Custom",
                                    "value": "custom",
                                  },
                                ]
                              }
                              quiet={true}
                              value={7}
                            />
                          </Label>
                          <Label
                            value="Minimum Counts"
                          >
                            <NumberInput
                              className="min-counts"
                              decrementTitle="Decrement"
                              disabled={false}
                              incrementTitle="Increment"
                              invalid={false}
                              onChange={[MockFunction]}
                              placeholder="Enter a number"
                              quiet={true}
                              readOnly={false}
                              step={1}
                              value={1000}
                            />
                          </Label>
                        </GridColumn>,
                        <GridColumn
                          size={3}
                        >
                          <Button
                            block={false}
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Search"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="cta"
                          />
                          <Button
                            block={false}
                            disabled={false}
                            element="button"
                            invalid={false}
                            label="Clear All"
                            logic={false}
                            onClick={[MockFunction]}
                            quiet={false}
                            selected={false}
                            variant="secondary"
                          />
                        </GridColumn>,
                      ],
                      "reverse": false,
                      "valign": "bottom",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <Label
                              value="Signal Status"
                            >
                              <Select
                                className="signal-status"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All",
                                      "value": "all",
                                    },
                                    Object {
                                      "label": "Unused Signals",
                                      "value": "unused",
                                    },
                                    Object {
                                      "label": "Signals Included in Traits",
                                      "value": "includedInTraits",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="all"
                              />
                            </Label>,
                            <Label
                              value="View Records For"
                            >
                              <Select
                                className="view-records"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Last 1 Day",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "Last 7 Days",
                                      "value": 7,
                                    },
                                    Object {
                                      "label": "Last 14 Days",
                                      "value": 14,
                                    },
                                    Object {
                                      "label": "Last 30 Days",
                                      "value": 30,
                                    },
                                    Object {
                                      "label": "Custom",
                                      "value": "custom",
                                    },
                                  ]
                                }
                                quiet={true}
                                value={7}
                              />
                            </Label>,
                            <Label
                              value="Minimum Counts"
                            >
                              <NumberInput
                                className="min-counts"
                                decrementTitle="Decrement"
                                disabled={false}
                                incrementTitle="Increment"
                                invalid={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a number"
                                quiet={true}
                                readOnly={false}
                                step={1}
                                value={1000}
                              />
                            </Label>,
                          ],
                          "size": 7,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": <Select
                                className="signal-status"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "All",
                                      "value": "all",
                                    },
                                    Object {
                                      "label": "Unused Signals",
                                      "value": "unused",
                                    },
                                    Object {
                                      "label": "Signals Included in Traits",
                                      "value": "includedInTraits",
                                    },
                                  ]
                                }
                                quiet={true}
                                value="all"
                              />,
                              "value": "Signal Status",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "className": "signal-status",
                                "onChange": [MockFunction],
                                "options": Array [
                                  Object {
                                    "label": "All",
                                    "value": "all",
                                  },
                                  Object {
                                    "label": "Unused Signals",
                                    "value": "unused",
                                  },
                                  Object {
                                    "label": "Signals Included in Traits",
                                    "value": "includedInTraits",
                                  },
                                ],
                                "quiet": true,
                                "value": "all",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": <Select
                                className="view-records"
                                onChange={[MockFunction]}
                                options={
                                  Array [
                                    Object {
                                      "label": "Last 1 Day",
                                      "value": 1,
                                    },
                                    Object {
                                      "label": "Last 7 Days",
                                      "value": 7,
                                    },
                                    Object {
                                      "label": "Last 14 Days",
                                      "value": 14,
                                    },
                                    Object {
                                      "label": "Last 30 Days",
                                      "value": 30,
                                    },
                                    Object {
                                      "label": "Custom",
                                      "value": "custom",
                                    },
                                  ]
                                }
                                quiet={true}
                                value={7}
                              />,
                              "value": "View Records For",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "className": "view-records",
                                "onChange": [MockFunction],
                                "options": Array [
                                  Object {
                                    "label": "Last 1 Day",
                                    "value": 1,
                                  },
                                  Object {
                                    "label": "Last 7 Days",
                                    "value": 7,
                                  },
                                  Object {
                                    "label": "Last 14 Days",
                                    "value": 14,
                                  },
                                  Object {
                                    "label": "Last 30 Days",
                                    "value": 30,
                                  },
                                  Object {
                                    "label": "Custom",
                                    "value": "custom",
                                  },
                                ],
                                "quiet": true,
                                "value": 7,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "children": <NumberInput
                                className="min-counts"
                                decrementTitle="Decrement"
                                disabled={false}
                                incrementTitle="Increment"
                                invalid={false}
                                onChange={[MockFunction]}
                                placeholder="Enter a number"
                                quiet={true}
                                readOnly={false}
                                step={1}
                                value={1000}
                              />,
                              "value": "Minimum Counts",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "className": "min-counts",
                                "decrementTitle": "Decrement",
                                "disabled": false,
                                "incrementTitle": "Increment",
                                "invalid": false,
                                "onChange": [MockFunction],
                                "placeholder": "Enter a number",
                                "quiet": true,
                                "readOnly": false,
                                "step": 1,
                                "value": 1000,
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": Array [
                            <Button
                              block={false}
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Search"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="cta"
                            />,
                            <Button
                              block={false}
                              disabled={false}
                              element="button"
                              invalid={false}
                              label="Clear All"
                              logic={false}
                              onClick={[MockFunction]}
                              quiet={false}
                              selected={false}
                              variant="secondary"
                            />,
                          ],
                          "size": 3,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "block": false,
                              "disabled": false,
                              "element": "button",
                              "invalid": false,
                              "label": "Search",
                              "logic": false,
                              "onClick": [MockFunction],
                              "quiet": false,
                              "selected": false,
                              "variant": "cta",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "block": false,
                              "disabled": false,
                              "element": "button",
                              "invalid": false,
                              "label": "Clear All",
                              "logic": false,
                              "onClick": [MockFunction],
                              "quiet": false,
                              "selected": false,
                              "variant": "secondary",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
