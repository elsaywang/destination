// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SaveSearchExecution/> rendering when error passes in matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SaveSearchExecution
    disabled={false}
    error={
      Object {
        "errorMessage": "Invalid Method",
        "hasError": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "errorMessage": "Invalid Method",
      "isInvalid": true,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "errorMessage": "Invalid Method",
        "isInvalid": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<SaveSearchExecution/> rendering when no error passes in matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SaveSearchExecution
    cancelSaveSearch={[MockFunction]}
    changeSortingOrder={[MockFunction]}
    confirmSaveThisSearch={[MockFunction]}
    disabled={true}
    error={
      Object {
        "errorMessage": "",
        "hasError": false,
      }
    }
    selectDefaultSorting={[MockFunction]}
    trackSearchResultInDashboard={[MockFunction]}
    updateSaveSearchName={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Button
          autoFocus={false}
          block={false}
          data-test="save-this-search-button"
          disabled={true}
          element="button"
          icon={<Add />}
          invalid={false}
          label="Save This Search"
          logic={false}
          quiet={true}
          selected={false}
          variant="action"
        />,
        <Dialog
          autoFocusButton={null}
          backdropClickable={false}
          cancelLabel="Cancel"
          className={undefined}
          confirmDisabled={false}
          confirmLabel="Save"
          keyboardConfirm={false}
          modalcontent={true}
          mode="centered"
          onCancel={[MockFunction]}
          onClose={[Function]}
          onConfirm={[MockFunction]}
          open={true}
          role="dialog"
          size="S"
          variant="information"
        >
          <SaveSearchExecutionContent
            onDefaultSortingChange={[MockFunction]}
            onSaveSearchNameChange={[MockFunction]}
            onSortingOrderChange={[MockFunction]}
            onTrackResultInDashboardChange={[MockFunction]}
          />
        </Dialog>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": false,
          "block": false,
          "data-test": "save-this-search-button",
          "disabled": true,
          "element": "button",
          "icon": <Add />,
          "invalid": false,
          "label": "Save This Search",
          "logic": false,
          "quiet": true,
          "selected": false,
          "variant": "action",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocusButton": null,
          "backdropClickable": false,
          "cancelLabel": "Cancel",
          "children": <SaveSearchExecutionContent
            onDefaultSortingChange={[MockFunction]}
            onSaveSearchNameChange={[MockFunction]}
            onSortingOrderChange={[MockFunction]}
            onTrackResultInDashboardChange={[MockFunction]}
          />,
          "className": undefined,
          "confirmDisabled": false,
          "confirmLabel": "Save",
          "keyboardConfirm": false,
          "modalcontent": true,
          "mode": "centered",
          "onCancel": [MockFunction],
          "onClose": [Function],
          "onConfirm": [MockFunction],
          "open": true,
          "role": "dialog",
          "size": "S",
          "variant": "information",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onDefaultSortingChange": [MockFunction],
            "onSaveSearchNameChange": [MockFunction],
            "onSortingOrderChange": [MockFunction],
            "onTrackResultInDashboardChange": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Button
            autoFocus={false}
            block={false}
            data-test="save-this-search-button"
            disabled={true}
            element="button"
            icon={<Add />}
            invalid={false}
            label="Save This Search"
            logic={false}
            quiet={true}
            selected={false}
            variant="action"
          />,
          <Dialog
            autoFocusButton={null}
            backdropClickable={false}
            cancelLabel="Cancel"
            className={undefined}
            confirmDisabled={false}
            confirmLabel="Save"
            keyboardConfirm={false}
            modalcontent={true}
            mode="centered"
            onCancel={[MockFunction]}
            onClose={[Function]}
            onConfirm={[MockFunction]}
            open={true}
            role="dialog"
            size="S"
            variant="information"
          >
            <SaveSearchExecutionContent
              onDefaultSortingChange={[MockFunction]}
              onSaveSearchNameChange={[MockFunction]}
              onSortingOrderChange={[MockFunction]}
              onTrackResultInDashboardChange={[MockFunction]}
            />
          </Dialog>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": false,
            "block": false,
            "data-test": "save-this-search-button",
            "disabled": true,
            "element": "button",
            "icon": <Add />,
            "invalid": false,
            "label": "Save This Search",
            "logic": false,
            "quiet": true,
            "selected": false,
            "variant": "action",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocusButton": null,
            "backdropClickable": false,
            "cancelLabel": "Cancel",
            "children": <SaveSearchExecutionContent
              onDefaultSortingChange={[MockFunction]}
              onSaveSearchNameChange={[MockFunction]}
              onSortingOrderChange={[MockFunction]}
              onTrackResultInDashboardChange={[MockFunction]}
            />,
            "className": undefined,
            "confirmDisabled": false,
            "confirmLabel": "Save",
            "keyboardConfirm": false,
            "modalcontent": true,
            "mode": "centered",
            "onCancel": [MockFunction],
            "onClose": [Function],
            "onConfirm": [MockFunction],
            "open": true,
            "role": "dialog",
            "size": "S",
            "variant": "information",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onDefaultSortingChange": [MockFunction],
              "onSaveSearchNameChange": [MockFunction],
              "onSortingOrderChange": [MockFunction],
              "onTrackResultInDashboardChange": [MockFunction],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
