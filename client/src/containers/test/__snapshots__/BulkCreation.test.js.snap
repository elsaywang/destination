// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BulkCreation/> component rendering when there are selectedSignals.records pass in props  matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BulkCreation
    selectedSignals={
      Object {
        "records": Array [
          Object {
            "rowIndex": 0,
            "signalType": "Adobe Analytics",
          },
        ],
        "selectionMessage": "1 Real-time signal selected ",
        "warning": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className={undefined}
        >
          1 Real-time signal selected 
        </span>,
        <Button
          block={false}
          disabled={false}
          element="button"
          icon={<Add />}
          invalid={false}
          label="Create Trait From Multi Signals"
          logic={false}
          onClick={undefined}
          quiet={false}
          selected={false}
          variant="action"
        />,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "1 Real-time signal selected ",
          "className": undefined,
        },
        "ref": null,
        "rendered": "1 Real-time signal selected ",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "block": false,
          "disabled": false,
          "element": "button",
          "icon": <Add />,
          "invalid": false,
          "label": "Create Trait From Multi Signals",
          "logic": false,
          "onClick": undefined,
          "quiet": false,
          "selected": false,
          "variant": "action",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className={undefined}
          >
            1 Real-time signal selected 
          </span>,
          <Button
            block={false}
            disabled={false}
            element="button"
            icon={<Add />}
            invalid={false}
            label="Create Trait From Multi Signals"
            logic={false}
            onClick={undefined}
            quiet={false}
            selected={false}
            variant="action"
          />,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "1 Real-time signal selected ",
            "className": undefined,
          },
          "ref": null,
          "rendered": "1 Real-time signal selected ",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "disabled": false,
            "element": "button",
            "icon": <Add />,
            "invalid": false,
            "label": "Create Trait From Multi Signals",
            "logic": false,
            "onClick": undefined,
            "quiet": false,
            "selected": false,
            "variant": "action",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<BulkCreation/> component rendering when there is no signal selected matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BulkCreation
    selectedSignals={
      Object {
        "createTraitFromMultiSignals": [MockFunction],
        "records": Array [],
        "selectionMessage": "",
        "warning": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
