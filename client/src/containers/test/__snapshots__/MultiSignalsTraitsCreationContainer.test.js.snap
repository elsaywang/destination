// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MultiSignalsTraitsCreationContainer/> component rendering when there are signals selected matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MultiSignalsTraitsCreationContainer
    selectedSignals={
        Object {
            "hasSignalSelectionsTypeWarning": false,
            "selectedRowIndexes": Array [
              0,
            ],
            "selectionMessage": "1 Real-time signal selected ",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "multiCreation": true,
      "selectedSignals": Object {
        "hasSignalSelectionsTypeWarning": false,
        "selectedRowIndexes": Array [
          0,
        ],
        "selectionMessage": "1 Real-time signal selected ",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "multiCreation": true,
        "selectedSignals": Object {
          "hasSignalSelectionsTypeWarning": false,
          "selectedRowIndexes": Array [
            0,
          ],
          "selectionMessage": "1 Real-time signal selected ",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<MultiSignalsTraitsCreationContainer/> component rendering when there is no signal selected matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MultiSignalsTraitsCreationContainer
    selectedSignals={
        Object {
            "hasSignalSelectionsTypeWarning": false,
            "selectedRowIndexes": Array [],
            "selectionMessage": "",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
