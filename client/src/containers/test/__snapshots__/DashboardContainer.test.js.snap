// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DashboardContainer /> component rendering when visibleSavedSearchList prop with no records passed in  matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DashboardContainer
    callSearch={[Function]}
    error={
      Object {
        "errorMessage": "",
        "hasError": false,
      }
    }
    fetchUserRoles={[Function]}
    getSavedSearch={[Function]}
    loadMoreSavedSearch={[Function]}
    permissions={Object {}}
    populateSearchFields={[Function]}
    resetVisibleSavedSearch={[Function]}
    savedSearchListTrackedInDashboard={Array []}
    visibleSavedSearchList={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div>
          <InlineErrorMessage
            errorMessage=""
            isInvalid={false}
          />
        </div>,
        Array [],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <InlineErrorMessage
            errorMessage=""
            isInvalid={false}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "errorMessage": "",
            "isInvalid": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            <InlineErrorMessage
              errorMessage=""
              isInvalid={false}
            />
          </div>,
          Array [],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <InlineErrorMessage
              errorMessage=""
              isInvalid={false}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "errorMessage": "",
              "isInvalid": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
  },
}
`;

exports[`<DashboardContainer /> component when \`visibleSavedSearchList\` is passed in as a prop matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DashboardContainer
    callSearch={[MockFunction]}
    error={
      Object {
        "errorMessage": "",
        "hasError": true,
      }
    }
    fetchUserRoles={[Function]}
    getSavedSearch={[Function]}
    loadMoreSavedSearch={[Function]}
    permissions={Object {}}
    populateSearchFields={[MockFunction]}
    resetVisibleSavedSearch={[Function]}
    savedSearchListTrackedInDashboard={Array []}
    visibleSavedSearchList={
      Array [
        Object {
          "endDate": "2018-04-29T05:55:48.852Z",
          "id": 0,
          "keyValuePairs": Array [
            Object {
              "key": "k-bandwidth",
              "operator": "<",
              "value": 80692,
            },
          ],
          "minEventFires": 91445,
          "name": "Clovis Simonis",
          "signalStatus": "USED",
          "sortBy": "Key Name",
          "source": Object {
            "categoryType": "Real-Time",
            "dataSourceIds": 30634,
            "reportSuiteIds": null,
            "sourceType": "REALTIME",
          },
          "startDate": "2018-04-29T16:37:33.894Z",
        },
        Object {
          "endDate": "2018-04-29T09:22:26.931Z",
          "id": 1,
          "keyValuePairs": Array [
            Object {
              "key": "k-Customer",
              "operator": "<",
              "value": 83989,
            },
            Object {
              "key": "k-coherent",
              "operator": "<=",
              "value": 54800,
            },
          ],
          "minEventFires": 33675,
          "name": "Stephen Sanford",
          "signalStatus": "USED",
          "sortBy": "Event Fires",
          "source": Object {
            "categoryType": "Real-Time",
            "dataSourceIds": 81638,
            "reportSuiteIds": null,
            "sourceType": "REALTIME",
          },
          "startDate": "2018-04-28T22:35:51.313Z",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div>
          <InlineErrorMessage
            errorMessage=""
            isInvalid={true}
          />
        </div>,
        Array [
          <Well
            className={undefined}
            data-test="saved-search-dashboard"
          >
            <GridRow
              reverse={false}
              valign="middle"
            >
              <GridColumn
                size={5}
              >
                <div
                  className={undefined}
                >
                  <Heading
                    size={3}
                  >
                    Clovis Simonis
                  </Heading>
                  <span
                    className={undefined}
                  />
                </div>
              </GridColumn>
              <GridColumn
                size={7}
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    offsetSize={10}
                    size={2}
                  >
                    <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="a"
                      href="#/search"
                      invalid={false}
                      label="View All"
                      logic={false}
                      onClick={[Function]}
                      quiet={false}
                      selected={false}
                      variant="primary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>
            <SavedSearchTable
              allowsSelection={false}
              canCreateTraits={undefined}
              getResultsBySavedSearch={[MockFunction]}
              isAdvancedSearchEnabled={false}
              savedSearch={
                Object {
                  "endDate": "2018-04-29T05:55:48.852Z",
                  "id": 0,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-bandwidth",
                      "operator": "<",
                      "value": 80692,
                    },
                  ],
                  "minEventFires": 91445,
                  "name": "Clovis Simonis",
                  "signalStatus": "USED",
                  "sortBy": "Key Name",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 30634,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-29T16:37:33.894Z",
                }
              }
            />
          </Well>,
          <Well
            className={undefined}
            data-test="saved-search-dashboard"
          >
            <GridRow
              reverse={false}
              valign="middle"
            >
              <GridColumn
                size={5}
              >
                <div
                  className={undefined}
                >
                  <Heading
                    size={3}
                  >
                    Stephen Sanford
                  </Heading>
                  <span
                    className={undefined}
                  />
                </div>
              </GridColumn>
              <GridColumn
                size={7}
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    offsetSize={10}
                    size={2}
                  >
                    <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="a"
                      href="#/search"
                      invalid={false}
                      label="View All"
                      logic={false}
                      onClick={[Function]}
                      quiet={false}
                      selected={false}
                      variant="primary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>
            <SavedSearchTable
              allowsSelection={false}
              canCreateTraits={undefined}
              getResultsBySavedSearch={[MockFunction]}
              isAdvancedSearchEnabled={false}
              savedSearch={
                Object {
                  "endDate": "2018-04-29T09:22:26.931Z",
                  "id": 1,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-Customer",
                      "operator": "<",
                      "value": 83989,
                    },
                    Object {
                      "key": "k-coherent",
                      "operator": "<=",
                      "value": 54800,
                    },
                  ],
                  "minEventFires": 33675,
                  "name": "Stephen Sanford",
                  "signalStatus": "USED",
                  "sortBy": "Event Fires",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 81638,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-28T22:35:51.313Z",
                }
              }
            />
          </Well>,
        ],
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <InlineErrorMessage
            errorMessage=""
            isInvalid={true}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "errorMessage": "",
            "isInvalid": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "Clovis Simonis",
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <GridRow
              reverse={false}
              valign="middle"
            >
              <GridColumn
                size={5}
              >
                <div
                  className={undefined}
                >
                  <Heading
                    size={3}
                  >
                    Clovis Simonis
                  </Heading>
                  <span
                    className={undefined}
                  />
                </div>
              </GridColumn>
              <GridColumn
                size={7}
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    offsetSize={10}
                    size={2}
                  >
                    <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="a"
                      href="#/search"
                      invalid={false}
                      label="View All"
                      logic={false}
                      onClick={[Function]}
                      quiet={false}
                      selected={false}
                      variant="primary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>,
            <SavedSearchTable
              allowsSelection={false}
              canCreateTraits={undefined}
              getResultsBySavedSearch={[MockFunction]}
              isAdvancedSearchEnabled={false}
              savedSearch={
                Object {
                  "endDate": "2018-04-29T05:55:48.852Z",
                  "id": 0,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-bandwidth",
                      "operator": "<",
                      "value": 80692,
                    },
                  ],
                  "minEventFires": 91445,
                  "name": "Clovis Simonis",
                  "signalStatus": "USED",
                  "sortBy": "Key Name",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 30634,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-29T16:37:33.894Z",
                }
              }
            />,
          ],
          "className": undefined,
          "data-test": "saved-search-dashboard",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Clovis Simonis
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>,
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>,
              ],
              "reverse": false,
              "valign": "middle",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Clovis Simonis
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>,
                  "size": 5,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Heading
                        size={3}
                      >
                        Clovis Simonis
                      </Heading>,
                      <span
                        className={undefined}
                      />,
                    ],
                    "className": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Clovis Simonis",
                        "size": 3,
                      },
                      "ref": null,
                      "rendered": "Clovis Simonis",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>,
                  "size": 7,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>,
                    "reverse": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />,
                      "offsetSize": 10,
                      "size": 2,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": false,
                        "block": false,
                        "disabled": false,
                        "element": "a",
                        "href": "#/search",
                        "invalid": false,
                        "label": "View All",
                        "logic": false,
                        "onClick": [Function],
                        "quiet": false,
                        "selected": false,
                        "variant": "primary",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowsSelection": false,
              "canCreateTraits": undefined,
              "getResultsBySavedSearch": [MockFunction],
              "isAdvancedSearchEnabled": false,
              "savedSearch": Object {
                "endDate": "2018-04-29T05:55:48.852Z",
                "id": 0,
                "keyValuePairs": Array [
                  Object {
                    "key": "k-bandwidth",
                    "operator": "<",
                    "value": 80692,
                  },
                ],
                "minEventFires": 91445,
                "name": "Clovis Simonis",
                "signalStatus": "USED",
                "sortBy": "Key Name",
                "source": Object {
                  "categoryType": "Real-Time",
                  "dataSourceIds": 30634,
                  "reportSuiteIds": null,
                  "sourceType": "REALTIME",
                },
                "startDate": "2018-04-29T16:37:33.894Z",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "Stephen Sanford",
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <GridRow
              reverse={false}
              valign="middle"
            >
              <GridColumn
                size={5}
              >
                <div
                  className={undefined}
                >
                  <Heading
                    size={3}
                  >
                    Stephen Sanford
                  </Heading>
                  <span
                    className={undefined}
                  />
                </div>
              </GridColumn>
              <GridColumn
                size={7}
              >
                <GridRow
                  reverse={false}
                >
                  <GridColumn
                    offsetSize={10}
                    size={2}
                  >
                    <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="a"
                      href="#/search"
                      invalid={false}
                      label="View All"
                      logic={false}
                      onClick={[Function]}
                      quiet={false}
                      selected={false}
                      variant="primary"
                    />
                  </GridColumn>
                </GridRow>
              </GridColumn>
            </GridRow>,
            <SavedSearchTable
              allowsSelection={false}
              canCreateTraits={undefined}
              getResultsBySavedSearch={[MockFunction]}
              isAdvancedSearchEnabled={false}
              savedSearch={
                Object {
                  "endDate": "2018-04-29T09:22:26.931Z",
                  "id": 1,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-Customer",
                      "operator": "<",
                      "value": 83989,
                    },
                    Object {
                      "key": "k-coherent",
                      "operator": "<=",
                      "value": 54800,
                    },
                  ],
                  "minEventFires": 33675,
                  "name": "Stephen Sanford",
                  "signalStatus": "USED",
                  "sortBy": "Event Fires",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 81638,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-28T22:35:51.313Z",
                }
              }
            />,
          ],
          "className": undefined,
          "data-test": "saved-search-dashboard",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Stephen Sanford
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>,
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>,
              ],
              "reverse": false,
              "valign": "middle",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Stephen Sanford
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>,
                  "size": 5,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Heading
                        size={3}
                      >
                        Stephen Sanford
                      </Heading>,
                      <span
                        className={undefined}
                      />,
                    ],
                    "className": undefined,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": "Stephen Sanford",
                        "size": 3,
                      },
                      "ref": null,
                      "rendered": "Stephen Sanford",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "span",
                    },
                  ],
                  "type": "div",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>,
                  "size": 7,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>,
                    "reverse": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />,
                      "offsetSize": 10,
                      "size": 2,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": false,
                        "block": false,
                        "disabled": false,
                        "element": "a",
                        "href": "#/search",
                        "invalid": false,
                        "label": "View All",
                        "logic": false,
                        "onClick": [Function],
                        "quiet": false,
                        "selected": false,
                        "variant": "primary",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowsSelection": false,
              "canCreateTraits": undefined,
              "getResultsBySavedSearch": [MockFunction],
              "isAdvancedSearchEnabled": false,
              "savedSearch": Object {
                "endDate": "2018-04-29T09:22:26.931Z",
                "id": 1,
                "keyValuePairs": Array [
                  Object {
                    "key": "k-Customer",
                    "operator": "<",
                    "value": 83989,
                  },
                  Object {
                    "key": "k-coherent",
                    "operator": "<=",
                    "value": 54800,
                  },
                ],
                "minEventFires": 33675,
                "name": "Stephen Sanford",
                "signalStatus": "USED",
                "sortBy": "Event Fires",
                "source": Object {
                  "categoryType": "Real-Time",
                  "dataSourceIds": 81638,
                  "reportSuiteIds": null,
                  "sourceType": "REALTIME",
                },
                "startDate": "2018-04-28T22:35:51.313Z",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            <InlineErrorMessage
              errorMessage=""
              isInvalid={true}
            />
          </div>,
          Array [
            <Well
              className={undefined}
              data-test="saved-search-dashboard"
            >
              <GridRow
                reverse={false}
                valign="middle"
              >
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Clovis Simonis
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>
              <SavedSearchTable
                allowsSelection={false}
                canCreateTraits={undefined}
                getResultsBySavedSearch={[MockFunction]}
                isAdvancedSearchEnabled={false}
                savedSearch={
                  Object {
                    "endDate": "2018-04-29T05:55:48.852Z",
                    "id": 0,
                    "keyValuePairs": Array [
                      Object {
                        "key": "k-bandwidth",
                        "operator": "<",
                        "value": 80692,
                      },
                    ],
                    "minEventFires": 91445,
                    "name": "Clovis Simonis",
                    "signalStatus": "USED",
                    "sortBy": "Key Name",
                    "source": Object {
                      "categoryType": "Real-Time",
                      "dataSourceIds": 30634,
                      "reportSuiteIds": null,
                      "sourceType": "REALTIME",
                    },
                    "startDate": "2018-04-29T16:37:33.894Z",
                  }
                }
              />
            </Well>,
            <Well
              className={undefined}
              data-test="saved-search-dashboard"
            >
              <GridRow
                reverse={false}
                valign="middle"
              >
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Stephen Sanford
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>
              <SavedSearchTable
                allowsSelection={false}
                canCreateTraits={undefined}
                getResultsBySavedSearch={[MockFunction]}
                isAdvancedSearchEnabled={false}
                savedSearch={
                  Object {
                    "endDate": "2018-04-29T09:22:26.931Z",
                    "id": 1,
                    "keyValuePairs": Array [
                      Object {
                        "key": "k-Customer",
                        "operator": "<",
                        "value": 83989,
                      },
                      Object {
                        "key": "k-coherent",
                        "operator": "<=",
                        "value": 54800,
                      },
                    ],
                    "minEventFires": 33675,
                    "name": "Stephen Sanford",
                    "signalStatus": "USED",
                    "sortBy": "Event Fires",
                    "source": Object {
                      "categoryType": "Real-Time",
                      "dataSourceIds": 81638,
                      "reportSuiteIds": null,
                      "sourceType": "REALTIME",
                    },
                    "startDate": "2018-04-28T22:35:51.313Z",
                  }
                }
              />
            </Well>,
          ],
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <InlineErrorMessage
              errorMessage=""
              isInvalid={true}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "errorMessage": "",
              "isInvalid": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "Clovis Simonis",
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow
                reverse={false}
                valign="middle"
              >
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Clovis Simonis
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>,
              <SavedSearchTable
                allowsSelection={false}
                canCreateTraits={undefined}
                getResultsBySavedSearch={[MockFunction]}
                isAdvancedSearchEnabled={false}
                savedSearch={
                  Object {
                    "endDate": "2018-04-29T05:55:48.852Z",
                    "id": 0,
                    "keyValuePairs": Array [
                      Object {
                        "key": "k-bandwidth",
                        "operator": "<",
                        "value": 80692,
                      },
                    ],
                    "minEventFires": 91445,
                    "name": "Clovis Simonis",
                    "signalStatus": "USED",
                    "sortBy": "Key Name",
                    "source": Object {
                      "categoryType": "Real-Time",
                      "dataSourceIds": 30634,
                      "reportSuiteIds": null,
                      "sourceType": "REALTIME",
                    },
                    "startDate": "2018-04-29T16:37:33.894Z",
                  }
                }
              />,
            ],
            "className": undefined,
            "data-test": "saved-search-dashboard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <GridColumn
                    size={5}
                  >
                    <div
                      className={undefined}
                    >
                      <Heading
                        size={3}
                      >
                        Clovis Simonis
                      </Heading>
                      <span
                        className={undefined}
                      />
                    </div>
                  </GridColumn>,
                  <GridColumn
                    size={7}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>,
                ],
                "reverse": false,
                "valign": "middle",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <div
                      className={undefined}
                    >
                      <Heading
                        size={3}
                      >
                        Clovis Simonis
                      </Heading>
                      <span
                        className={undefined}
                      />
                    </div>,
                    "size": 5,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Heading
                          size={3}
                        >
                          Clovis Simonis
                        </Heading>,
                        <span
                          className={undefined}
                        />,
                      ],
                      "className": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Clovis Simonis",
                          "size": 3,
                        },
                        "ref": null,
                        "rendered": "Clovis Simonis",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>
                    </GridRow>,
                    "size": 7,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>,
                      "reverse": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />,
                        "offsetSize": 10,
                        "size": 2,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoFocus": false,
                          "block": false,
                          "disabled": false,
                          "element": "a",
                          "href": "#/search",
                          "invalid": false,
                          "label": "View All",
                          "logic": false,
                          "onClick": [Function],
                          "quiet": false,
                          "selected": false,
                          "variant": "primary",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowsSelection": false,
                "canCreateTraits": undefined,
                "getResultsBySavedSearch": [MockFunction],
                "isAdvancedSearchEnabled": false,
                "savedSearch": Object {
                  "endDate": "2018-04-29T05:55:48.852Z",
                  "id": 0,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-bandwidth",
                      "operator": "<",
                      "value": 80692,
                    },
                  ],
                  "minEventFires": 91445,
                  "name": "Clovis Simonis",
                  "signalStatus": "USED",
                  "sortBy": "Key Name",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 30634,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-29T16:37:33.894Z",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "Stephen Sanford",
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridRow
                reverse={false}
                valign="middle"
              >
                <GridColumn
                  size={5}
                >
                  <div
                    className={undefined}
                  >
                    <Heading
                      size={3}
                    >
                      Stephen Sanford
                    </Heading>
                    <span
                      className={undefined}
                    />
                  </div>
                </GridColumn>
                <GridColumn
                  size={7}
                >
                  <GridRow
                    reverse={false}
                  >
                    <GridColumn
                      offsetSize={10}
                      size={2}
                    >
                      <Button
                        autoFocus={false}
                        block={false}
                        disabled={false}
                        element="a"
                        href="#/search"
                        invalid={false}
                        label="View All"
                        logic={false}
                        onClick={[Function]}
                        quiet={false}
                        selected={false}
                        variant="primary"
                      />
                    </GridColumn>
                  </GridRow>
                </GridColumn>
              </GridRow>,
              <SavedSearchTable
                allowsSelection={false}
                canCreateTraits={undefined}
                getResultsBySavedSearch={[MockFunction]}
                isAdvancedSearchEnabled={false}
                savedSearch={
                  Object {
                    "endDate": "2018-04-29T09:22:26.931Z",
                    "id": 1,
                    "keyValuePairs": Array [
                      Object {
                        "key": "k-Customer",
                        "operator": "<",
                        "value": 83989,
                      },
                      Object {
                        "key": "k-coherent",
                        "operator": "<=",
                        "value": 54800,
                      },
                    ],
                    "minEventFires": 33675,
                    "name": "Stephen Sanford",
                    "signalStatus": "USED",
                    "sortBy": "Event Fires",
                    "source": Object {
                      "categoryType": "Real-Time",
                      "dataSourceIds": 81638,
                      "reportSuiteIds": null,
                      "sourceType": "REALTIME",
                    },
                    "startDate": "2018-04-28T22:35:51.313Z",
                  }
                }
              />,
            ],
            "className": undefined,
            "data-test": "saved-search-dashboard",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <GridColumn
                    size={5}
                  >
                    <div
                      className={undefined}
                    >
                      <Heading
                        size={3}
                      >
                        Stephen Sanford
                      </Heading>
                      <span
                        className={undefined}
                      />
                    </div>
                  </GridColumn>,
                  <GridColumn
                    size={7}
                  >
                    <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>
                    </GridRow>
                  </GridColumn>,
                ],
                "reverse": false,
                "valign": "middle",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <div
                      className={undefined}
                    >
                      <Heading
                        size={3}
                      >
                        Stephen Sanford
                      </Heading>
                      <span
                        className={undefined}
                      />
                    </div>,
                    "size": 5,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Heading
                          size={3}
                        >
                          Stephen Sanford
                        </Heading>,
                        <span
                          className={undefined}
                        />,
                      ],
                      "className": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": "Stephen Sanford",
                          "size": 3,
                        },
                        "ref": null,
                        "rendered": "Stephen Sanford",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": undefined,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <GridRow
                      reverse={false}
                    >
                      <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>
                    </GridRow>,
                    "size": 7,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <GridColumn
                        offsetSize={10}
                        size={2}
                      >
                        <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />
                      </GridColumn>,
                      "reverse": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          autoFocus={false}
                          block={false}
                          disabled={false}
                          element="a"
                          href="#/search"
                          invalid={false}
                          label="View All"
                          logic={false}
                          onClick={[Function]}
                          quiet={false}
                          selected={false}
                          variant="primary"
                        />,
                        "offsetSize": 10,
                        "size": 2,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoFocus": false,
                          "block": false,
                          "disabled": false,
                          "element": "a",
                          "href": "#/search",
                          "invalid": false,
                          "label": "View All",
                          "logic": false,
                          "onClick": [Function],
                          "quiet": false,
                          "selected": false,
                          "variant": "primary",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowsSelection": false,
                "canCreateTraits": undefined,
                "getResultsBySavedSearch": [MockFunction],
                "isAdvancedSearchEnabled": false,
                "savedSearch": Object {
                  "endDate": "2018-04-29T09:22:26.931Z",
                  "id": 1,
                  "keyValuePairs": Array [
                    Object {
                      "key": "k-Customer",
                      "operator": "<",
                      "value": 83989,
                    },
                    Object {
                      "key": "k-coherent",
                      "operator": "<=",
                      "value": 54800,
                    },
                  ],
                  "minEventFires": 33675,
                  "name": "Stephen Sanford",
                  "signalStatus": "USED",
                  "sortBy": "Event Fires",
                  "source": Object {
                    "categoryType": "Real-Time",
                    "dataSourceIds": 81638,
                    "reportSuiteIds": null,
                    "sourceType": "REALTIME",
                  },
                  "startDate": "2018-04-28T22:35:51.313Z",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
  },
}
`;
