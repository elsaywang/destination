// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Layout/> component rendering when including children component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Layout
    heading="Destinations"
>
    <Well />
</Layout>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Provider
        locale="en-US"
        scale="medium"
        theme="light"
        typekitId="ruf7eed"
>
        <Grid
                className={undefined}
                variant="fluid"
        >
                <GridRow
                        className=""
                        reverse={false}
                        valign="middle"
                >
                        <GridColumn
                                size={6}
                        >
                                <GridRow
                                        reverse={false}
                                >
                                        <FormattedMessage
                                                defaultMessage="Destinations"
                                                description="Title for the Destinations page"
                                                id="components.Layout.title"
                                                values={Object {}}
                                        >
                                                [Function]
                                        </FormattedMessage>
                                </GridRow>
                                <Connect(SearchWrapper) />
                        </GridColumn>
                        <GridColumn
                                className="creat-destination-button"
                                size={6}
                        >
                                <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                                >
                                        Create Destination
                                </Button>
                        </GridColumn>
                </GridRow>
                <Well />
        </Grid>
</Provider>,
      "locale": "en",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Grid
          className={undefined}
          variant="fluid"
>
          <GridRow
                    className=""
                    reverse={false}
                    valign="middle"
          >
                    <GridColumn
                              size={6}
                    >
                              <GridRow
                                        reverse={false}
                              >
                                        <FormattedMessage
                                                  defaultMessage="Destinations"
                                                  description="Title for the Destinations page"
                                                  id="components.Layout.title"
                                                  values={Object {}}
                                        >
                                                  [Function]
                                        </FormattedMessage>
                              </GridRow>
                              <Connect(SearchWrapper) />
                    </GridColumn>
                    <GridColumn
                              className="creat-destination-button"
                              size={6}
                    >
                              <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                              >
                                        Create Destination
                              </Button>
                    </GridColumn>
          </GridRow>
          <Well />
</Grid>,
        "locale": "en-US",
        "scale": "medium",
        "theme": "light",
        "typekitId": "ruf7eed",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <GridRow
              className=""
              reverse={false}
              valign="middle"
>
              <GridColumn
                            size={6}
              >
                            <GridRow
                                          reverse={false}
                            >
                                          <FormattedMessage
                                                        defaultMessage="Destinations"
                                                        description="Title for the Destinations page"
                                                        id="components.Layout.title"
                                                        values={Object {}}
                                          >
                                                        [Function]
                                          </FormattedMessage>
                            </GridRow>
                            <Connect(SearchWrapper) />
              </GridColumn>
              <GridColumn
                            className="creat-destination-button"
                            size={6}
              >
                            <Button
                                          autoFocus={false}
                                          block={false}
                                          disabled={false}
                                          element="button"
                                          invalid={false}
                                          label=""
                                          logic={false}
                                          quiet={false}
                                          selected={false}
                                          variant="cta"
                            >
                                          Create Destination
                            </Button>
              </GridColumn>
</GridRow>,
            <Well />,
          ],
          "className": undefined,
          "variant": "fluid",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <GridColumn
                  size={6}
>
                  <GridRow
                                    reverse={false}
                  >
                                    <FormattedMessage
                                                      defaultMessage="Destinations"
                                                      description="Title for the Destinations page"
                                                      id="components.Layout.title"
                                                      values={Object {}}
                                    >
                                                      [Function]
                                    </FormattedMessage>
                  </GridRow>
                  <Connect(SearchWrapper) />
</GridColumn>,
                <GridColumn
                  className="creat-destination-button"
                  size={6}
>
                  <Button
                                    autoFocus={false}
                                    block={false}
                                    disabled={false}
                                    element="button"
                                    invalid={false}
                                    label=""
                                    logic={false}
                                    quiet={false}
                                    selected={false}
                                    variant="cta"
                  >
                                    Create Destination
                  </Button>
</GridColumn>,
              ],
              "className": "",
              "reverse": false,
              "valign": "middle",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <GridRow
                      reverse={false}
>
                      <FormattedMessage
                                            defaultMessage="Destinations"
                                            description="Title for the Destinations page"
                                            id="components.Layout.title"
                                            values={Object {}}
                      >
                                            [Function]
                      </FormattedMessage>
</GridRow>,
                    <Connect(SearchWrapper) />,
                  ],
                  "size": 6,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <FormattedMessage
                        defaultMessage="Destinations"
                        description="Title for the Destinations page"
                        id="components.Layout.title"
                        values={Object {}}
>
                        [Function]
</FormattedMessage>,
                      "reverse": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": [Function],
                        "defaultMessage": "Destinations",
                        "description": "Title for the Destinations page",
                        "id": "components.Layout.title",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": [Function],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    autoFocus={false}
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label=""
                    logic={false}
                    quiet={false}
                    selected={false}
                    variant="cta"
>
                    Create Destination
</Button>,
                  "className": "creat-destination-button",
                  "size": 6,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoFocus": false,
                    "block": false,
                    "children": "Create Destination",
                    "disabled": false,
                    "element": "button",
                    "invalid": false,
                    "label": "",
                    "logic": false,
                    "quiet": false,
                    "selected": false,
                    "variant": "cta",
                  },
                  "ref": null,
                  "rendered": "Create Destination",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          locale="en-US"
          scale="medium"
          theme="light"
          typekitId="ruf7eed"
>
          <Grid
                    className={undefined}
                    variant="fluid"
          >
                    <GridRow
                              className=""
                              reverse={false}
                              valign="middle"
                    >
                              <GridColumn
                                        size={6}
                              >
                                        <GridRow
                                                  reverse={false}
                                        >
                                                  <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                                  >
                                                            [Function]
                                                  </FormattedMessage>
                                        </GridRow>
                                        <Connect(SearchWrapper) />
                              </GridColumn>
                              <GridColumn
                                        className="creat-destination-button"
                                        size={6}
                              >
                                        <Button
                                                  autoFocus={false}
                                                  block={false}
                                                  disabled={false}
                                                  element="button"
                                                  invalid={false}
                                                  label=""
                                                  logic={false}
                                                  quiet={false}
                                                  selected={false}
                                                  variant="cta"
                                        >
                                                  Create Destination
                                        </Button>
                              </GridColumn>
                    </GridRow>
                    <Well />
          </Grid>
</Provider>,
        "locale": "en",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Grid
            className={undefined}
            variant="fluid"
>
            <GridRow
                        className=""
                        reverse={false}
                        valign="middle"
            >
                        <GridColumn
                                    size={6}
                        >
                                    <GridRow
                                                reverse={false}
                                    >
                                                <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                                >
                                                            [Function]
                                                </FormattedMessage>
                                    </GridRow>
                                    <Connect(SearchWrapper) />
                        </GridColumn>
                        <GridColumn
                                    className="creat-destination-button"
                                    size={6}
                        >
                                    <Button
                                                autoFocus={false}
                                                block={false}
                                                disabled={false}
                                                element="button"
                                                invalid={false}
                                                label=""
                                                logic={false}
                                                quiet={false}
                                                selected={false}
                                                variant="cta"
                                    >
                                                Create Destination
                                    </Button>
                        </GridColumn>
            </GridRow>
            <Well />
</Grid>,
          "locale": "en-US",
          "scale": "medium",
          "theme": "light",
          "typekitId": "ruf7eed",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <GridRow
                className=""
                reverse={false}
                valign="middle"
>
                <GridColumn
                                size={6}
                >
                                <GridRow
                                                reverse={false}
                                >
                                                <FormattedMessage
                                                                defaultMessage="Destinations"
                                                                description="Title for the Destinations page"
                                                                id="components.Layout.title"
                                                                values={Object {}}
                                                >
                                                                [Function]
                                                </FormattedMessage>
                                </GridRow>
                                <Connect(SearchWrapper) />
                </GridColumn>
                <GridColumn
                                className="creat-destination-button"
                                size={6}
                >
                                <Button
                                                autoFocus={false}
                                                block={false}
                                                disabled={false}
                                                element="button"
                                                invalid={false}
                                                label=""
                                                logic={false}
                                                quiet={false}
                                                selected={false}
                                                variant="cta"
                                >
                                                Create Destination
                                </Button>
                </GridColumn>
</GridRow>,
              <Well />,
            ],
            "className": undefined,
            "variant": "fluid",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <GridColumn
                    size={6}
>
                    <GridRow
                                        reverse={false}
                    >
                                        <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                        >
                                                            [Function]
                                        </FormattedMessage>
                    </GridRow>
                    <Connect(SearchWrapper) />
</GridColumn>,
                  <GridColumn
                    className="creat-destination-button"
                    size={6}
>
                    <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                    >
                                        Create Destination
                    </Button>
</GridColumn>,
                ],
                "className": "",
                "reverse": false,
                "valign": "middle",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <GridRow
                        reverse={false}
>
                        <FormattedMessage
                                                defaultMessage="Destinations"
                                                description="Title for the Destinations page"
                                                id="components.Layout.title"
                                                values={Object {}}
                        >
                                                [Function]
                        </FormattedMessage>
</GridRow>,
                      <Connect(SearchWrapper) />,
                    ],
                    "size": 6,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="Destinations"
                          description="Title for the Destinations page"
                          id="components.Layout.title"
                          values={Object {}}
>
                          [Function]
</FormattedMessage>,
                        "reverse": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": [Function],
                          "defaultMessage": "Destinations",
                          "description": "Title for the Destinations page",
                          "id": "components.Layout.title",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": [Function],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label=""
                      logic={false}
                      quiet={false}
                      selected={false}
                      variant="cta"
>
                      Create Destination
</Button>,
                    "className": "creat-destination-button",
                    "size": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": false,
                      "block": false,
                      "children": "Create Destination",
                      "disabled": false,
                      "element": "button",
                      "invalid": false,
                      "label": "",
                      "logic": false,
                      "quiet": false,
                      "selected": false,
                      "variant": "cta",
                    },
                    "ref": null,
                    "rendered": "Create Destination",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<Layout/> component rendering without any children component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Layout
    heading="Destinations"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Provider
        locale="en-US"
        scale="medium"
        theme="light"
        typekitId="ruf7eed"
>
        <Grid
                className={undefined}
                variant="fluid"
        >
                <GridRow
                        className=""
                        reverse={false}
                        valign="middle"
                >
                        <GridColumn
                                size={6}
                        >
                                <GridRow
                                        reverse={false}
                                >
                                        <FormattedMessage
                                                defaultMessage="Destinations"
                                                description="Title for the Destinations page"
                                                id="components.Layout.title"
                                                values={Object {}}
                                        >
                                                [Function]
                                        </FormattedMessage>
                                </GridRow>
                                <Connect(SearchWrapper) />
                        </GridColumn>
                        <GridColumn
                                className="creat-destination-button"
                                size={6}
                        >
                                <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                                >
                                        Create Destination
                                </Button>
                        </GridColumn>
                </GridRow>
        </Grid>
</Provider>,
      "locale": "en",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Grid
          className={undefined}
          variant="fluid"
>
          <GridRow
                    className=""
                    reverse={false}
                    valign="middle"
          >
                    <GridColumn
                              size={6}
                    >
                              <GridRow
                                        reverse={false}
                              >
                                        <FormattedMessage
                                                  defaultMessage="Destinations"
                                                  description="Title for the Destinations page"
                                                  id="components.Layout.title"
                                                  values={Object {}}
                                        >
                                                  [Function]
                                        </FormattedMessage>
                              </GridRow>
                              <Connect(SearchWrapper) />
                    </GridColumn>
                    <GridColumn
                              className="creat-destination-button"
                              size={6}
                    >
                              <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                              >
                                        Create Destination
                              </Button>
                    </GridColumn>
          </GridRow>
</Grid>,
        "locale": "en-US",
        "scale": "medium",
        "theme": "light",
        "typekitId": "ruf7eed",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <GridRow
              className=""
              reverse={false}
              valign="middle"
>
              <GridColumn
                            size={6}
              >
                            <GridRow
                                          reverse={false}
                            >
                                          <FormattedMessage
                                                        defaultMessage="Destinations"
                                                        description="Title for the Destinations page"
                                                        id="components.Layout.title"
                                                        values={Object {}}
                                          >
                                                        [Function]
                                          </FormattedMessage>
                            </GridRow>
                            <Connect(SearchWrapper) />
              </GridColumn>
              <GridColumn
                            className="creat-destination-button"
                            size={6}
              >
                            <Button
                                          autoFocus={false}
                                          block={false}
                                          disabled={false}
                                          element="button"
                                          invalid={false}
                                          label=""
                                          logic={false}
                                          quiet={false}
                                          selected={false}
                                          variant="cta"
                            >
                                          Create Destination
                            </Button>
              </GridColumn>
</GridRow>,
            undefined,
          ],
          "className": undefined,
          "variant": "fluid",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <GridColumn
                  size={6}
>
                  <GridRow
                                    reverse={false}
                  >
                                    <FormattedMessage
                                                      defaultMessage="Destinations"
                                                      description="Title for the Destinations page"
                                                      id="components.Layout.title"
                                                      values={Object {}}
                                    >
                                                      [Function]
                                    </FormattedMessage>
                  </GridRow>
                  <Connect(SearchWrapper) />
</GridColumn>,
                <GridColumn
                  className="creat-destination-button"
                  size={6}
>
                  <Button
                                    autoFocus={false}
                                    block={false}
                                    disabled={false}
                                    element="button"
                                    invalid={false}
                                    label=""
                                    logic={false}
                                    quiet={false}
                                    selected={false}
                                    variant="cta"
                  >
                                    Create Destination
                  </Button>
</GridColumn>,
              ],
              "className": "",
              "reverse": false,
              "valign": "middle",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <GridRow
                      reverse={false}
>
                      <FormattedMessage
                                            defaultMessage="Destinations"
                                            description="Title for the Destinations page"
                                            id="components.Layout.title"
                                            values={Object {}}
                      >
                                            [Function]
                      </FormattedMessage>
</GridRow>,
                    <Connect(SearchWrapper) />,
                  ],
                  "size": 6,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <FormattedMessage
                        defaultMessage="Destinations"
                        description="Title for the Destinations page"
                        id="components.Layout.title"
                        values={Object {}}
>
                        [Function]
</FormattedMessage>,
                      "reverse": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": [Function],
                        "defaultMessage": "Destinations",
                        "description": "Title for the Destinations page",
                        "id": "components.Layout.title",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": [Function],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    autoFocus={false}
                    block={false}
                    disabled={false}
                    element="button"
                    invalid={false}
                    label=""
                    logic={false}
                    quiet={false}
                    selected={false}
                    variant="cta"
>
                    Create Destination
</Button>,
                  "className": "creat-destination-button",
                  "size": 6,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoFocus": false,
                    "block": false,
                    "children": "Create Destination",
                    "disabled": false,
                    "element": "button",
                    "invalid": false,
                    "label": "",
                    "logic": false,
                    "quiet": false,
                    "selected": false,
                    "variant": "cta",
                  },
                  "ref": null,
                  "rendered": "Create Destination",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          locale="en-US"
          scale="medium"
          theme="light"
          typekitId="ruf7eed"
>
          <Grid
                    className={undefined}
                    variant="fluid"
          >
                    <GridRow
                              className=""
                              reverse={false}
                              valign="middle"
                    >
                              <GridColumn
                                        size={6}
                              >
                                        <GridRow
                                                  reverse={false}
                                        >
                                                  <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                                  >
                                                            [Function]
                                                  </FormattedMessage>
                                        </GridRow>
                                        <Connect(SearchWrapper) />
                              </GridColumn>
                              <GridColumn
                                        className="creat-destination-button"
                                        size={6}
                              >
                                        <Button
                                                  autoFocus={false}
                                                  block={false}
                                                  disabled={false}
                                                  element="button"
                                                  invalid={false}
                                                  label=""
                                                  logic={false}
                                                  quiet={false}
                                                  selected={false}
                                                  variant="cta"
                                        >
                                                  Create Destination
                                        </Button>
                              </GridColumn>
                    </GridRow>
          </Grid>
</Provider>,
        "locale": "en",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Grid
            className={undefined}
            variant="fluid"
>
            <GridRow
                        className=""
                        reverse={false}
                        valign="middle"
            >
                        <GridColumn
                                    size={6}
                        >
                                    <GridRow
                                                reverse={false}
                                    >
                                                <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                                >
                                                            [Function]
                                                </FormattedMessage>
                                    </GridRow>
                                    <Connect(SearchWrapper) />
                        </GridColumn>
                        <GridColumn
                                    className="creat-destination-button"
                                    size={6}
                        >
                                    <Button
                                                autoFocus={false}
                                                block={false}
                                                disabled={false}
                                                element="button"
                                                invalid={false}
                                                label=""
                                                logic={false}
                                                quiet={false}
                                                selected={false}
                                                variant="cta"
                                    >
                                                Create Destination
                                    </Button>
                        </GridColumn>
            </GridRow>
</Grid>,
          "locale": "en-US",
          "scale": "medium",
          "theme": "light",
          "typekitId": "ruf7eed",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <GridRow
                className=""
                reverse={false}
                valign="middle"
>
                <GridColumn
                                size={6}
                >
                                <GridRow
                                                reverse={false}
                                >
                                                <FormattedMessage
                                                                defaultMessage="Destinations"
                                                                description="Title for the Destinations page"
                                                                id="components.Layout.title"
                                                                values={Object {}}
                                                >
                                                                [Function]
                                                </FormattedMessage>
                                </GridRow>
                                <Connect(SearchWrapper) />
                </GridColumn>
                <GridColumn
                                className="creat-destination-button"
                                size={6}
                >
                                <Button
                                                autoFocus={false}
                                                block={false}
                                                disabled={false}
                                                element="button"
                                                invalid={false}
                                                label=""
                                                logic={false}
                                                quiet={false}
                                                selected={false}
                                                variant="cta"
                                >
                                                Create Destination
                                </Button>
                </GridColumn>
</GridRow>,
              undefined,
            ],
            "className": undefined,
            "variant": "fluid",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <GridColumn
                    size={6}
>
                    <GridRow
                                        reverse={false}
                    >
                                        <FormattedMessage
                                                            defaultMessage="Destinations"
                                                            description="Title for the Destinations page"
                                                            id="components.Layout.title"
                                                            values={Object {}}
                                        >
                                                            [Function]
                                        </FormattedMessage>
                    </GridRow>
                    <Connect(SearchWrapper) />
</GridColumn>,
                  <GridColumn
                    className="creat-destination-button"
                    size={6}
>
                    <Button
                                        autoFocus={false}
                                        block={false}
                                        disabled={false}
                                        element="button"
                                        invalid={false}
                                        label=""
                                        logic={false}
                                        quiet={false}
                                        selected={false}
                                        variant="cta"
                    >
                                        Create Destination
                    </Button>
</GridColumn>,
                ],
                "className": "",
                "reverse": false,
                "valign": "middle",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <GridRow
                        reverse={false}
>
                        <FormattedMessage
                                                defaultMessage="Destinations"
                                                description="Title for the Destinations page"
                                                id="components.Layout.title"
                                                values={Object {}}
                        >
                                                [Function]
                        </FormattedMessage>
</GridRow>,
                      <Connect(SearchWrapper) />,
                    ],
                    "size": 6,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="Destinations"
                          description="Title for the Destinations page"
                          id="components.Layout.title"
                          values={Object {}}
>
                          [Function]
</FormattedMessage>,
                        "reverse": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": [Function],
                          "defaultMessage": "Destinations",
                          "description": "Title for the Destinations page",
                          "id": "components.Layout.title",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": [Function],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Button
                      autoFocus={false}
                      block={false}
                      disabled={false}
                      element="button"
                      invalid={false}
                      label=""
                      logic={false}
                      quiet={false}
                      selected={false}
                      variant="cta"
>
                      Create Destination
</Button>,
                    "className": "creat-destination-button",
                    "size": 6,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "autoFocus": false,
                      "block": false,
                      "children": "Create Destination",
                      "disabled": false,
                      "element": "button",
                      "invalid": false,
                      "label": "",
                      "logic": false,
                      "quiet": false,
                      "selected": false,
                      "variant": "cta",
                    },
                    "ref": null,
                    "rendered": "Create Destination",
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            undefined,
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
